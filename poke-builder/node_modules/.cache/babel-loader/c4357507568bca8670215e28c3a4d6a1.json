{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITCoursesProjects\\\\React\\\\PokeBuilder\\\\poke-builder\\\\src\\\\containers\\\\PokeBuilder\\\\PokeBuilder.js\";\nimport React, { Component } from 'react';\nimport Auxilliary from '../../hoc/Auxilliary';\nimport Poke from '../../components/Poke/Poke';\nimport BuildControls from '../../components/Poke/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Poke/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport { connect } from 'react-redux';\nimport * as pokeBuilderActions from '../../store/actions/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PokeBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // purchasable: false,\n      purchasing: false\n    };\n\n    this.purchasingHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      console.log(this.props.history);\n      this.props.history.push('/checkout');\n    };\n  }\n\n  // purchaseContinueHandler = () => {\n  //     const queryParams = [];\n  //     for (let i in this.props.ings) {\n  //         queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.props.ings[i]));\n  //     }\n  //     queryParams.push('price=' + this.props.price);\n  //     const queryString = queryParams.join('&');\n  //     this.props.history.push(\n  //         {\n  //             pathname: '/checkout',\n  //             search: '?' + queryString\n  //         });\n  // }\n  componentDidMount() {\n    this.props.onInitIngredients();\n  }\n\n  updatePurchaseState(ingredients) {\n    console.log('here1');\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    return sum > 0;\n  } // addIngredientHandler = (type) => {\n  //     const oldCount = this.props.ings[type];\n  //     const updatedCount = oldCount + 1;\n  //     const updatedIngredients = { ...this.props.ings };\n  //     updatedIngredients[type] = updatedCount;\n  //     const newPrice = this.props.price + INGREDIENT_PRICE[type];\n  //     this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\n  //     this.updatePurchaseState(updatedIngredients);\n  // }\n  // removeIngredientHandler = (type) => {\n  //     const ol dCount = this.props.ings[type];\n  //     const updatedCount = oldCount - 1;\n  //     if (updatedCount < 0) {\n  //         return;\n  //     }\n  //     const updatedIngredients = { ...this.props.ings };\n  //     updatedIngredients[type] = updatedCount;\n  //     const newPrice = this.props.price - INGREDIENT_PRICE[type];\n  //     this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\n  //     this.updatePurchaseState(updatedIngredients);\n  // }\n\n\n  render() {\n    const disableInfo = { ...this.props.ings\n    };\n\n    for (let key in disableInfo) {\n      disableInfo[key] = disableInfo[key] <= 0;\n    } // if (this.state.loading) {\n    //     orderSummary = <Spinner />\n    // }\n\n\n    let orderSummary = null;\n    let poke = this.props.error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Ingredients cannot be loaded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 39\n    }, this) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 77\n    }, this);\n\n    if (this.props.ings) {\n      poke = /*#__PURE__*/_jsxDEV(Auxilliary, {\n        children: [/*#__PURE__*/_jsxDEV(Poke, {\n          ingredients: this.props.ings\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(BuildControls, {\n          ingredientAdded: this.props.onIngredientAdded,\n          ingredientRemoved: this.props.onIngredientRemoved,\n          totalPrice: this.props.price,\n          purchasable: this.updatePurchaseState(this.props.ings),\n          ordered: this.purchasingHandler,\n          disable: disableInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 20\n      }, this);\n      orderSummary = /*#__PURE__*/_jsxDEV(OrderSummary, {\n        price: this.props.price.toFixed(2),\n        ingredients: this.props.ings,\n        purchaseCancelled: this.purchaseCancelHandler,\n        purchaseContinued: this.purchaseContinueHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 28\n      }, this);\n    }\n\n    if (this.props.ingredients === null) {\n      orderSummary = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 28\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Auxilliary, {\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        show: this.state.purchasing,\n        modalClosed: this.purchaseCancelHandler,\n        children: orderSummary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), poke]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.pokeBuilder.ingredients,\n    price: state.pokeBuilder.totalPrice,\n    error: state.pokeBuilder.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientAdded: ingName => dispatch(pokeBuilderActions.addIngredient(ingName)),\n    onIngredientRemoved: ingName => dispatch(pokeBuilderActions.removeIngredient(ingName)),\n    onInitIngredients: () => dispatch(pokeBuilderActions.initIngredients())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(PokeBuilder, axios));","map":{"version":3,"sources":["D:/ITCoursesProjects/React/PokeBuilder/poke-builder/src/containers/PokeBuilder/PokeBuilder.js"],"names":["React","Component","Auxilliary","Poke","BuildControls","Modal","OrderSummary","axios","Spinner","withErrorHandler","connect","pokeBuilderActions","PokeBuilder","state","purchasing","purchasingHandler","setState","purchaseCancelHandler","purchaseContinueHandler","console","log","props","history","push","componentDidMount","onInitIngredients","updatePurchaseState","ingredients","sum","Object","keys","map","igKey","reduce","el","render","disableInfo","ings","key","orderSummary","poke","error","onIngredientAdded","onIngredientRemoved","price","toFixed","mapStateToProps","pokeBuilder","totalPrice","mapDispatchToProps","dispatch","ingName","addIngredient","removeIngredient","initIngredients"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Auxilliary from '../../hoc/Auxilliary';\r\nimport Poke from '../../components/Poke/Poke';\r\nimport BuildControls from '../../components/Poke/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Poke/OrderSummary/OrderSummary';\r\nimport axios from '../../axios-orders';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport { connect } from 'react-redux';\r\nimport * as pokeBuilderActions from '../../store/actions/index';\r\n\r\n\r\nclass PokeBuilder extends Component {\r\n\r\n    state = {\r\n        // purchasable: false,\r\n        purchasing: false,\r\n    };\r\n\r\n    purchasingHandler = () => {\r\n        this.setState({ purchasing: true });\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({ purchasing: false });\r\n    }\r\n\r\n    // purchaseContinueHandler = () => {\r\n    //     const queryParams = [];\r\n    //     for (let i in this.props.ings) {\r\n    //         queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.props.ings[i]));\r\n    //     }\r\n    //     queryParams.push('price=' + this.props.price);\r\n    //     const queryString = queryParams.join('&');\r\n    //     this.props.history.push(\r\n    //         {\r\n    //             pathname: '/checkout',\r\n    //             search: '?' + queryString\r\n    //         });\r\n    // }\r\n    componentDidMount() {\r\n        this.props.onInitIngredients()\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        console.log(this.props.history)\r\n        this.props.history.push('/checkout');\r\n    }\r\n\r\n    updatePurchaseState(ingredients) {\r\n        console.log('here1');\r\n        const sum = Object.keys(ingredients)\r\n            .map(igKey => {\r\n                return ingredients[igKey];\r\n            })\r\n            .reduce((sum, el) => {\r\n                return sum + el;\r\n            }, 0);\r\n        return sum > 0\r\n    }\r\n\r\n    // addIngredientHandler = (type) => {\r\n    //     const oldCount = this.props.ings[type];\r\n    //     const updatedCount = oldCount + 1;\r\n    //     const updatedIngredients = { ...this.props.ings };\r\n    //     updatedIngredients[type] = updatedCount;\r\n\r\n    //     const newPrice = this.props.price + INGREDIENT_PRICE[type];\r\n    //     this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\r\n    //     this.updatePurchaseState(updatedIngredients);\r\n\r\n    // }\r\n\r\n    // removeIngredientHandler = (type) => {\r\n    //     const ol dCount = this.props.ings[type];\r\n    //     const updatedCount = oldCount - 1;\r\n    //     if (updatedCount < 0) {\r\n    //         return;\r\n    //     }\r\n\r\n    //     const updatedIngredients = { ...this.props.ings };\r\n    //     updatedIngredients[type] = updatedCount;\r\n\r\n    //     const newPrice = this.props.price - INGREDIENT_PRICE[type];\r\n    //     this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\r\n    //     this.updatePurchaseState(updatedIngredients);\r\n    // }\r\n\r\n\r\n    render() {\r\n        const disableInfo = {\r\n            ...this.props.ings\r\n        };\r\n        for (let key in disableInfo) {\r\n            disableInfo[key] = disableInfo[key] <= 0;\r\n        }\r\n\r\n\r\n        // if (this.state.loading) {\r\n        //     orderSummary = <Spinner />\r\n        // }\r\n        let orderSummary = null;\r\n        let poke = this.props.error ? <p>Ingredients cannot be loaded</p> : <Spinner />;\r\n        if (this.props.ings) {\r\n            poke = <Auxilliary>\r\n                <Poke ingredients={this.props.ings} />\r\n                <BuildControls\r\n                    ingredientAdded={this.props.onIngredientAdded}\r\n                    ingredientRemoved={this.props.onIngredientRemoved}\r\n                    totalPrice={this.props.price}\r\n                    purchasable={this.updatePurchaseState(this.props.ings)}\r\n                    ordered={this.purchasingHandler}\r\n                    disable={disableInfo} />\r\n            </Auxilliary>;\r\n\r\n            orderSummary = <OrderSummary\r\n                price={this.props.price.toFixed(2)}\r\n                ingredients={this.props.ings}\r\n                purchaseCancelled={this.purchaseCancelHandler}\r\n                purchaseContinued={this.purchaseContinueHandler} />\r\n        }\r\n        if (this.props.ingredients === null) {\r\n            orderSummary = <Spinner></Spinner>\r\n        }\r\n        return (\r\n            <Auxilliary>                \r\n                <Modal\r\n                show={this.state.purchasing}\r\n                modalClosed={this.purchaseCancelHandler}>\r\n                {orderSummary}\r\n            </Modal>\r\n                {poke}</Auxilliary>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.pokeBuilder.ingredients,\r\n        price: state.pokeBuilder.totalPrice,\r\n        error: state.pokeBuilder.error\r\n    };\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: (ingName) => dispatch(pokeBuilderActions.addIngredient(ingName)),\r\n        onIngredientRemoved: (ingName) => dispatch(pokeBuilderActions.removeIngredient(ingName)),\r\n        onInitIngredients: () => dispatch(pokeBuilderActions.initIngredients())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(PokeBuilder, axios));"]},"metadata":{},"sourceType":"module"}