{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITCoursesProjects\\\\React\\\\PokeBuilder\\\\poke-builder\\\\src\\\\containers\\\\CheckOut\\\\ContactData\\\\ContactData.js\";\nimport classes from './ContactData.module.css';\nimport React, { Component } from 'react';\nimport Button from '../../../components/UI/Button/Button';\nimport axios from '../../../axios-orders';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Input from '../../../components/UI/Input/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ContactData extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      orderForm: {\n        name: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Your Name'\n          },\n          value: ''\n        },\n        street: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Street'\n          },\n          value: ''\n        },\n        postcode: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Postcode'\n          },\n          value: ''\n        },\n        phone: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Phone Number'\n          },\n          value: ''\n        },\n        deliveryMethod: {\n          elementType: 'select',\n          elementConfig: {\n            options: [{\n              value: 'fastest',\n              displayValue: 'Fastest'\n            }, {\n              value: 'cheapest',\n              displayValue: 'Cheapest'\n            }]\n          },\n          value: ''\n        },\n        loading: false\n      }\n    };\n\n    this.orderHandler = () => {\n      this.setState({\n        loading: true\n      });\n      console.log(this.props.history);\n      const order = {\n        ingredients: this.props.ingredients,\n        price: this.props.price,\n        customer: {\n          name: 'Test',\n          address: '123 test street',\n          phone: '0411000000'\n        },\n        deliveryMethods: 'leave at door'\n      };\n      axios.post('/orders.json', order).then(response => {\n        this.setState({\n          loading: false\n        });\n        this.props.history.push('/');\n      }).catch(this.setState({\n        loading: false\n      }));\n    };\n  }\n\n  render() {\n    const formElementsArray = [];\n\n    for (let key in this.state.orderForm) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.orderForm[key]\n      });\n    }\n\n    let form = /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [formElementsArray.map(formElement => /*#__PURE__*/_jsxDEV(Input, {\n        elementType: formElement.config.elementType,\n        elementConfig: formElement.config.elementConfig,\n        value: formElement.config.value\n      }, formElement.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        btnType: \"Success\",\n        clicked: this.orderHandler,\n        children: \"Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }, this);\n\n    if (this.state.loading) {\n      form = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Please Enter your Contact Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), form]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ContactData;","map":{"version":3,"sources":["D:/ITCoursesProjects/React/PokeBuilder/poke-builder/src/containers/CheckOut/ContactData/ContactData.js"],"names":["classes","React","Component","Button","axios","Spinner","Input","ContactData","state","orderForm","name","elementType","elementConfig","type","placeholder","value","street","postcode","phone","deliveryMethod","options","displayValue","loading","orderHandler","setState","console","log","props","history","order","ingredients","price","customer","address","deliveryMethods","post","then","response","push","catch","render","formElementsArray","key","id","config","form","map","formElement"],"mappings":"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","sourcesContent":["import classes from './ContactData.module.css';\r\nimport React, { Component } from 'react';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport axios from '../../../axios-orders';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport Input from '../../../components/UI/Input/Input';\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name'\r\n                },\r\n                value: ''\r\n            },\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Street'\r\n                },\r\n                value: ''\r\n            },\r\n            \r\n            postcode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Postcode'\r\n                },\r\n                value: ''\r\n            },\r\n            phone: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Phone Number'\r\n                },\r\n                value: ''\r\n            },\r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        { value: 'fastest', displayValue: 'Fastest' },\r\n                        { value: 'cheapest', displayValue: 'Cheapest' },\r\n\r\n                    ]\r\n                },\r\n                value: ''\r\n            },\r\n            loading: false\r\n        },\r\n\r\n    }\r\n\r\n    orderHandler = () => {\r\n        this.setState({ loading: true });\r\n        console.log(this.props.history);\r\n        const order = {\r\n            ingredients: this.props.ingredients,\r\n            price: this.props.price,\r\n            customer: {\r\n                name: 'Test',\r\n                address: '123 test street',\r\n                phone: '0411000000',\r\n            },\r\n            deliveryMethods: 'leave at door'\r\n        };\r\n        axios.post('/orders.json', order)\r\n            .then(response => {\r\n                this.setState({ loading: false });\r\n                this.props.history.push('/');\r\n            })\r\n            .catch(this.setState({ loading: false }));\r\n    }\r\n\r\n    render() {\r\n        const formElementsArray = [];\r\n        for(let key in this.state.orderForm){\r\n            formElementsArray.push({\r\n                id:key,\r\n                config: this.state.orderForm[key]\r\n            })\r\n        }\r\n        let form = (<form>\r\n            {formElementsArray.map(formElement =>(\r\n                <Input \r\n                key = {formElement.id}\r\n                elementType={formElement.config.elementType}\r\n                elementConfig={formElement.config.elementConfig}\r\n                value = {formElement.config.value}\r\n                />\r\n            ))}\r\n            {/* <Input inputtype=\"input\" type=\"text\" name=\"name\" placeholder=\"Your Name\" />\r\n            <Input inputtype=\"input\" type=\"text\" name=\"phone\" placeholder=\"Your Phone\" />\r\n            <Input inputtype=\"input\" type=\"text\" name=\"street\" placeholder=\"Street\" />\r\n            <Input inputtype=\"input\" type=\"text\" name=\"postcode\" placeholder=\"Post Code\" /> */}\r\n            <Button btnType=\"Success\"\r\n                clicked={this.orderHandler}>\r\n                Order</Button>\r\n        </form>);\r\n\r\n        if (this.state.loading) {\r\n            form = <Spinner />;\r\n        }\r\n        return (\r\n            <div>\r\n                <h4>Please Enter your Contact Info</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContactData;"]},"metadata":{},"sourceType":"module"}