{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITCoursesProjects\\\\React\\\\PokeBuilder\\\\poke-builder\\\\src\\\\containers\\\\Orders\\\\Orders.js\";\nimport React, { Component } from 'react';\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\nimport { connect } from 'react-redux';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Orders extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      orders: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    this.props.onFetchOrders(this.props.token);\n  }\n\n  render() {\n    let orders = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 22\n    }, this);\n\n    if (!this.props.loading) {\n      orders = this.props.orders.map(order => /*#__PURE__*/_jsxDEV(Order, {\n        ingredients: order.ingredients,\n        price: order.price\n      }, order.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: orders\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","map":{"version":3,"sources":["D:/ITCoursesProjects/React/PokeBuilder/poke-builder/src/containers/Orders/Orders.js"],"names":["React","Component","Order","axios","withErrorHandler","actions","connect","Spinner","Orders","state","orders","loading","componentDidMount","props","onFetchOrders","token","render","map","order","ingredients","price","id","mapStateToProps","auth","userId","mapDispatchToProps","dispatch","fetchOrders"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,gBAAP,MAA6B,6CAA7B;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,qCAApB;;;AAEA,MAAMC,MAAN,SAAqBP,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC3BQ,KAD2B,GACnB;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,OAAO,EAAE;AAFL,KADmB;AAAA;;AAM3BC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWC,aAAX,CAAyB,KAAKD,KAAL,CAAWE,KAApC;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAIN,MAAM,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAb;;AACA,QAAI,CAAC,KAAKG,KAAL,CAAWF,OAAhB,EAAyB;AACrBD,MAAAA,MAAM,GAAG,KAAKG,KAAL,CAAWH,MAAX,CAAkBO,GAAlB,CAAsBC,KAAK,iBAChC,QAAC,KAAD;AAEI,QAAA,WAAW,EAAEA,KAAK,CAACC,WAFvB;AAGI,QAAA,KAAK,EAAED,KAAK,CAACE;AAHjB,SACSF,KAAK,CAACG,EADf;AAAA;AAAA;AAAA;AAAA,cADK,CAAT;AAMH;;AACD,wBACI;AAAA,gBACKX;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAIH;;AAxB0B;;AA0B/B,MAAMY,eAAe,GAAGb,KAAK,IAAI;AAC7B,SAAO;AACHC,IAAAA,MAAM,EAAED,KAAK,CAACS,KAAN,CAAYR,MADjB;AAEHC,IAAAA,OAAO,EAAEF,KAAK,CAACS,KAAN,CAAYP,OAFlB;AAGHI,IAAAA,KAAK,EAACN,KAAK,CAACc,IAAN,CAAWR,KAHd;AAIHS,IAAAA,MAAM,EAAEf,KAAK,CAACc,IAAN,CAAWC;AAJhB,GAAP;AAMH,CAPD;;AASA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHZ,IAAAA,aAAa,EAAE,CAACC,KAAD,EAAOS,MAAP,KAAkBE,QAAQ,CAACrB,OAAO,CAACsB,WAAR,CAAoBZ,KAApB,EAA2BS,MAA3B,CAAD;AADtC,GAAP;AAGH,CAJD;;AAMA,eAAelB,OAAO,CAACgB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CrB,gBAAgB,CAACI,MAAD,EAASL,KAAT,CAA7D,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nclass Orders extends Component {\r\n    state = {\r\n        orders: [],\r\n        loading: true\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchOrders(this.props.token);\r\n    }\r\n\r\n    render() {\r\n        let orders = <Spinner />;\r\n        if (!this.props.loading) {\r\n            orders = this.props.orders.map(order => (\r\n                <Order\r\n                    key={order.id}\r\n                    ingredients={order.ingredients}\r\n                    price={order.price} />\r\n            ))\r\n        }\r\n        return (\r\n            <div>\r\n                {orders}\r\n            </div>);\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token:state.auth.token,\r\n        userId: state.auth.userId\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: (token,userId) => dispatch(actions.fetchOrders(token, userId))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));"]},"metadata":{},"sourceType":"module"}