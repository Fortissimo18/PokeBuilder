{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITCoursesProjects\\\\React\\\\PokeBuilder\\\\poke-builder\\\\src\\\\containers\\\\Carousel\\\\Carousel.js\";\nimport React, { Component } from 'react';\nimport classes from './Carousel.module.css';\nimport BuildControls from '../../components/Poke/BuildControls/BuildControls';\nimport Auxilliary from '../../hoc/Auxilliary';\nimport { findAllByDisplayValue } from '@testing-library/dom';\nimport { StrictMode } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TOTAL_STEPS = \"3\";\n\nclass Carousel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      index: \"1\",\n      showCheckoutButton: false,\n      goUpDisable: true,\n      goDownDisable: false,\n      animation: \"played\"\n    };\n\n    this.toggleSteps = (idx, direction) => {\n      if (idx === \"1\") {\n        this.setState({\n          index: \"1\",\n          showCheckoutButton: false,\n          goUpDisable: true,\n          goDownDisable: false,\n          animation: direction\n        });\n        this.button1.current.checked = true;\n        this.button2.current.checked = false;\n        this.button3.current.checked = false;\n      }\n\n      if (idx === \"2\") {\n        this.setState({\n          index: \"2\",\n          showCheckoutButton: false,\n          goUpDisable: false,\n          goDownDisable: false,\n          animation: direction\n        });\n        this.button1.current.checked = false;\n        this.button2.current.checked = true;\n        this.button3.current.checked = false;\n      }\n\n      if (idx === \"3\") {\n        this.setState({\n          index: \"3\",\n          showCheckoutButton: true,\n          goUpDisable: false,\n          goDownDisable: true,\n          animation: direction\n        });\n        this.button1.current.checked = false;\n        this.button2.current.checked = false;\n        this.button3.current.checked = true;\n      }\n    };\n\n    this.loadSteps = event => {\n      if (Number(event.target.value) > Number(this.state.index)) {\n        this.toggleSteps(event.target.value, \"down\");\n      }\n\n      if (Number(event.target.value) < Number(this.state.index)) {\n        this.toggleSteps(event.target.value, \"up\");\n      }\n    };\n\n    this.stepsGoDown = () => {\n      if (this.state.index !== TOTAL_STEPS) {\n        this.toggleSteps(String(Number(this.state.index) + 1), \"down\");\n      }\n    };\n\n    this.stepsGoUp = () => {\n      if (this.state.index !== \"1\") {\n        this.toggleSteps(String(Number(this.state.index) - 1), \"up\");\n      }\n    };\n\n    this.resetAnimation = () => {\n      this.setState({\n        animation: \"played\"\n      });\n    };\n\n    this.button1 = /*#__PURE__*/React.createRef();\n    this.button2 = /*#__PURE__*/React.createRef();\n    this.button3 = /*#__PURE__*/React.createRef();\n  }\n\n  render() {\n    // let animationClass = [classes.Controls];\n    // if (this.state.animation === \"up\") {\n    //     animationClass = [classes.Controls, classes.goUp];\n    // }\n    // if (this.state.animation === \"down\"){\n    //     animationClass= [classes.Controls, classes.goDown];\n    // }\n    let step = null;\n\n    if (this.state.index === \"1\") {\n      step = /*#__PURE__*/_jsxDEV(BuildControls, {\n        ingredientAdded: this.props.ingredientAdded,\n        ingredientRemoved: this.props.ingredientRemoved,\n        ingredientsReset: this.props.ingredientsReset,\n        totalPrice: this.props.totalPrice,\n        disable: this.props.disable,\n        ings: this.props.ings,\n        animationCSS: this.state.animation,\n        animationReset: this.resetAnimation,\n        category: \"base\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (this.state.index === \"2\") {\n      step = /*#__PURE__*/_jsxDEV(BuildControls, {\n        ingredientAdded: this.props.ingredientAdded,\n        ingredientRemoved: this.props.ingredientRemoved,\n        ingredientsReset: this.props.ingredientsReset,\n        totalPrice: this.props.totalPrice,\n        disable: this.props.disable,\n        ings: this.props.ings,\n        animationCSS: this.state.animation,\n        animationReset: this.resetAnimation,\n        category: \"proteins\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (this.state.index === \"3\") {\n      step = /*#__PURE__*/_jsxDEV(BuildControls, {\n        ingredientAdded: this.props.ingredientAdded,\n        ingredientRemoved: this.props.ingredientRemoved,\n        ingredientsReset: this.props.ingredientsReset,\n        totalPrice: this.props.totalPrice,\n        disable: this.props.disable,\n        ings: this.props.ings,\n        animationCSS: this.state.animation,\n        animationReset: this.resetAnimation,\n        category: \"toppings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 20\n      }, this);\n    }\n\n    let leftArrowClasses = [classes.arrow, classes.left];\n    let leftArrowDisabledClasses = [classes.arrow, classes.left, classes.disabled];\n    let rightArrowClasses = [classes.arrow, classes.right];\n    let rightArrowDisabledClasses = [classes.arrow, classes.right, classes.disabled];\n    return /*#__PURE__*/_jsxDEV(Auxilliary, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.Carousel,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.Card,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.progress_inner,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: classes.step1,\n              name: \"step\",\n              type: \"radio\",\n              ref: this.button1,\n              value: \"1\",\n              onClick: event => {\n                this.loadSteps(event);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: classes.step2,\n              name: \"step\",\n              type: \"radio\",\n              ref: this.button2,\n              value: \"2\",\n              onClick: event => {\n                this.loadSteps(event);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: classes.step3,\n              name: \"step\",\n              type: \"radio\",\n              ref: this.button3,\n              value: \"3\",\n              onClick: event => {\n                this.loadSteps(event);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.progress_inner__step,\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                for: classes.step1,\n                children: \"Base\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.progress_inner__step,\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                for: classes.step2,\n                children: \"Proteins\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.progress_inner__step,\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                for: classes.step3,\n                children: \"Toppings\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.progress_inner__bar\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.progress_inner__bar_set\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            children: [step, this.state.goUpDisable ? /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              className: leftArrowDisabledClasses.join(' ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              className: leftArrowClasses.join(' '),\n              onClick: event => this.stepsGoUp(event)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }, this), this.state.goDownDisable ? /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              className: rightArrowDisabledClasses.join(' ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              className: rightArrowClasses.join(' '),\n              onClick: event => this.stepsGoDown(event)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: classes.fillButton,\n              disabled: !this.props.purchasable,\n              onClick: this.props.ordered,\n              children: this.props.isAuth ? \"Order Now\" : \"Sign In to Order\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this);\n  }\n\n} // class Carousel extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.button1 = React.createRef();\n//         this.button2 = React.createRef();\n//         this.button3 = React.createRef();    \n//     }\n//         state = {\n//         index: \"1\",\n//         showCheckoutButton: false,\n//         goUpDisable: true,\n//         goDownDisable: false,\n//         animation: \"played\"\n//     };\n//     toggleSteps = (idx, direction) => {\n//         if (idx === \"1\") {\n//             this.setState({ index: \"1\", showCheckoutButton: false, goUpDisable: true, goDownDisable: false, animation: direction });\n//             console.log(\"set state: \", this.state.animation);\n//             this.button1.current.checked = true;\n//             this.button2.current.checked = false;\n//             this.button3.current.checked = false;\n//         }\n//         if (idx === \"2\") {\n//             this.setState({ index: \"2\", showCheckoutButton: false, goUpDisable: false, goDownDisable: false, animation: direction });\n//             console.log(\"set state: \", this.state.animation);\n//             this.button1.current.checked = false;\n//             this.button2.current.checked = true;\n//             this.button3.current.checked = false;\n//         }\n//         if (idx === \"3\") {\n//             this.setState({ index: \"3\", showCheckoutButton: true, goUpDisable: false, goDownDisable: true, animation: direction });\n//             console.log(\"set state: \", this.state.animation);\n//             this.button1.current.checked = false;\n//             this.button2.current.checked = false;\n//             this.button3.current.checked = true;\n//         }\n//     }\n//     loadSteps = (event) => {\n//         if(Number(event.target.value) > Number(this.state.index)){\n//             this.toggleSteps(event.target.value, \"down\");\n//         }\n//         if(Number(event.target.value) < Number(this.state.index)){\n//             this.toggleSteps(event.target.value, \"up\");\n//         }        \n//     }\n//     stepsGoDown = () => {\n//         if (this.state.index !== TOTAL_STEPS) {\n//             this.toggleSteps(String(Number(this.state.index) + 1), \"down\");\n//         }\n//     }\n//     stepsGoUp = () => {\n//         if (this.state.index !== \"1\") {\n//             this.toggleSteps(String(Number(this.state.index) - 1), \"up\");\n//         }\n//     }\n//     resetAnimation = () => {\n//         this.setState({ animation: \"played\" });        \n//         console.log(\"reset: \", this.state.animation);\n//     }\n//     render() {\n//         let step = null;\n//         if (this.state.index === \"1\") {\n//             step = <BuildControls\n//                 isAuth={this.props.isAuth}\n//                 ingredientAdded={this.props.ingredientAdded}\n//                 ingredientRemoved={this.props.ingredientRemoved}\n//                 ingredientsReset={this.props.ingredientsReset}\n//                 totalPrice={this.props.totalPrice}\n//                 purchasable={this.props.purchasable}\n//                 ordered={this.props.ordered}\n//                 disable={this.props.disable}\n//                 ings={this.props.ings}\n//                 category=\"base\" />;\n//         }\n//         if (this.state.index === \"2\") {\n//             step = <BuildControls\n//                 isAuth={this.props.isAuth}\n//                 ingredientAdded={this.props.ingredientAdded}\n//                 ingredientRemoved={this.props.ingredientRemoved}\n//                 ingredientsReset={this.props.ingredientsReset}\n//                 totalPrice={this.props.totalPrice}\n//                 purchasable={this.props.purchasable}\n//                 ordered={this.props.ordered}\n//                 disable={this.props.disable}\n//                 ings={this.props.ings}\n//                 category=\"proteins\" />;\n//         }\n//         if (this.state.index === \"3\") {\n//             step = <BuildControls\n//                 isAuth={this.props.isAuth}\n//                 ingredientAdded={this.props.ingredientAdded}\n//                 ingredientRemoved={this.props.ingredientRemoved}\n//                 ingredientsReset={this.props.ingredientsReset}\n//                 totalPrice={this.props.totalPrice}\n//                 purchasable={this.props.purchasable}\n//                 ordered={this.props.ordered}\n//                 disable={this.props.disable}\n//                 ings={this.props.ings}\n//                 category=\"toppings\" />;\n//         }\n//         let leftArrowClasses = [classes.arrow, classes.left];\n//         let leftArrowDisabledClasses = [classes.arrow, classes.left, classes.disabled];\n//         let rightArrowClasses = [classes.arrow, classes.right];\n//         let rightArrowDisabledClasses = [classes.arrow, classes.right, classes.disabled];\n//         let animationClass = [classes.Controls];\n//         if (this.state.animation === \"up\") {\n//             animationClass = [classes.Controls, classes.goUp];\n//         }\n//         if (this.state.animation === \"down\"){\n//             animationClass= [classes.Controls, classes.goDown];\n//         }\n//         console.log(animationClass.join(' '));\n//         return (\n//             <Auxilliary>\n//                 <div className={classes.progress_inner} >\n//                     <input id={classes.step1} name=\"step\" type=\"radio\"\n//                         ref={this.button1} value=\"1\" onClick={event => { this.loadSteps(event) }} />\n//                     <input id={classes.step2} name='step' type='radio'\n//                         ref={this.button2} value=\"2\" onClick={event => { this.loadSteps(event) }} />\n//                     <input id={classes.step3} name='step' type='radio'\n//                         ref={this.button3} value=\"3\" onClick={event => { this.loadSteps(event) }} />\n//                     <div className={classes.progress_inner__step}>\n//                         <label for={classes.step1}>Base</label>\n//                     </div>\n//                     <div className={classes.progress_inner__step}>\n//                         <label for={classes.step2}>Proteins</label>\n//                     </div>\n//                     <div className={classes.progress_inner__step}>\n//                         <label for={classes.step3}>Toppings</label>\n//                     </div>\n//                     <div className={classes.progress_inner__bar}></div>\n//                     <div className={classes.progress_inner__bar_set}></div>\n//                 </div>\n//                 <div className={classes.Card} >\n//                     <fieldset>\n//                         <div className={animationClass.join(' ')} onAnimationEnd={event=>this.resetAnimation(event)}>{step}</div>\n//                         {this.state.goUpDisable ?\n//                             <a href=\"#\"  className={leftArrowDisabledClasses.join(' ')}></a> :\n//                             <a href=\"#\" className={leftArrowClasses.join(' ')}\n//                                 onClick={event=>this.stepsGoUp(event)}\n//                                 ></a>}\n//                         {this.state.goDownDisable ?\n//                             <a href=\"#\" className={rightArrowDisabledClasses.join(' ')}></a> :\n//                             <a href=\"#\" className={rightArrowClasses.join(' ')}\n//                                 onClick={event=>this.stepsGoDown(event)}\n//                             ></a>}\n//                     </fieldset>\n//                 </div>\n//             </Auxilliary>\n//         );\n//     };\n// }\n\n\nexport default Carousel;","map":{"version":3,"sources":["D:/ITCoursesProjects/React/PokeBuilder/poke-builder/src/containers/Carousel/Carousel.js"],"names":["React","Component","classes","BuildControls","Auxilliary","findAllByDisplayValue","StrictMode","TOTAL_STEPS","Carousel","constructor","props","state","index","showCheckoutButton","goUpDisable","goDownDisable","animation","toggleSteps","idx","direction","setState","button1","current","checked","button2","button3","loadSteps","event","Number","target","value","stepsGoDown","String","stepsGoUp","resetAnimation","createRef","render","step","ingredientAdded","ingredientRemoved","ingredientsReset","totalPrice","disable","ings","leftArrowClasses","arrow","left","leftArrowDisabledClasses","disabled","rightArrowClasses","right","rightArrowDisabledClasses","Card","progress_inner","step1","step2","step3","progress_inner__step","progress_inner__bar","progress_inner__bar_set","join","fillButton","purchasable","ordered","isAuth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport classes from './Carousel.module.css';\r\nimport BuildControls from '../../components/Poke/BuildControls/BuildControls';\r\nimport Auxilliary from '../../hoc/Auxilliary';\r\nimport { findAllByDisplayValue } from '@testing-library/dom';\r\nimport { StrictMode } from 'react';\r\n\r\nconst TOTAL_STEPS = \"3\";\r\n\r\nclass Carousel extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.button1 = React.createRef();\r\n        this.button2 = React.createRef();\r\n        this.button3 = React.createRef();\r\n\r\n    }\r\n\r\n    state = {\r\n        index: \"1\",\r\n        showCheckoutButton: false,\r\n        goUpDisable: true,\r\n        goDownDisable: false,\r\n        animation: \"played\"\r\n    };\r\n\r\n\r\n\r\n    toggleSteps = (idx, direction) => {\r\n        if (idx === \"1\") {\r\n            this.setState({ index: \"1\", showCheckoutButton: false, goUpDisable: true, goDownDisable: false, animation: direction });\r\n            this.button1.current.checked = true;\r\n            this.button2.current.checked = false;\r\n            this.button3.current.checked = false;\r\n        }\r\n        if (idx === \"2\") {\r\n            this.setState({ index: \"2\", showCheckoutButton: false, goUpDisable: false, goDownDisable: false, animation: direction });\r\n            this.button1.current.checked = false;\r\n            this.button2.current.checked = true;\r\n            this.button3.current.checked = false;\r\n        }\r\n        if (idx === \"3\") {\r\n            this.setState({ index: \"3\", showCheckoutButton: true, goUpDisable: false, goDownDisable: true, animation: direction });\r\n            this.button1.current.checked = false;\r\n            this.button2.current.checked = false;\r\n            this.button3.current.checked = true;\r\n        }\r\n    }\r\n\r\n    loadSteps = (event) => {\r\n        if (Number(event.target.value) > Number(this.state.index)) {\r\n            this.toggleSteps(event.target.value, \"down\");\r\n        }\r\n        if (Number(event.target.value) < Number(this.state.index)) {\r\n            this.toggleSteps(event.target.value, \"up\");\r\n        }\r\n    }\r\n\r\n    stepsGoDown = () => {\r\n        if (this.state.index !== TOTAL_STEPS) {\r\n            this.toggleSteps(String(Number(this.state.index) + 1), \"down\");\r\n        }\r\n    }\r\n    stepsGoUp = () => {\r\n        if (this.state.index !== \"1\") {\r\n            this.toggleSteps(String(Number(this.state.index) - 1), \"up\");\r\n        }\r\n    }\r\n\r\n\r\n    resetAnimation = () => {\r\n        this.setState({ animation: \"played\" });\r\n    }\r\n    render() {\r\n\r\n        // let animationClass = [classes.Controls];\r\n        // if (this.state.animation === \"up\") {\r\n        //     animationClass = [classes.Controls, classes.goUp];\r\n        // }\r\n        // if (this.state.animation === \"down\"){\r\n        //     animationClass= [classes.Controls, classes.goDown];\r\n        // }\r\n        let step = null;\r\n        if (this.state.index === \"1\") {\r\n            step = <BuildControls\r\n                ingredientAdded={this.props.ingredientAdded}\r\n                ingredientRemoved={this.props.ingredientRemoved}\r\n                ingredientsReset={this.props.ingredientsReset}\r\n                totalPrice={this.props.totalPrice}\r\n                disable={this.props.disable}\r\n                ings={this.props.ings}\r\n                animationCSS={this.state.animation}\r\n                animationReset={this.resetAnimation}\r\n                category=\"base\" />;\r\n        }\r\n        if (this.state.index === \"2\") {\r\n            step = <BuildControls\r\n                ingredientAdded={this.props.ingredientAdded}\r\n                ingredientRemoved={this.props.ingredientRemoved}\r\n                ingredientsReset={this.props.ingredientsReset}\r\n                totalPrice={this.props.totalPrice}\r\n                disable={this.props.disable}\r\n                ings={this.props.ings}\r\n                animationCSS={this.state.animation}\r\n                animationReset={this.resetAnimation}\r\n                category=\"proteins\" />;\r\n        }\r\n        if (this.state.index === \"3\") {\r\n            step = <BuildControls\r\n                ingredientAdded={this.props.ingredientAdded}\r\n                ingredientRemoved={this.props.ingredientRemoved}\r\n                ingredientsReset={this.props.ingredientsReset}\r\n                totalPrice={this.props.totalPrice}\r\n                disable={this.props.disable}\r\n                ings={this.props.ings}\r\n                animationCSS={this.state.animation}\r\n                animationReset={this.resetAnimation}\r\n                category=\"toppings\" />;\r\n        }\r\n\r\n        let leftArrowClasses = [classes.arrow, classes.left];\r\n        let leftArrowDisabledClasses = [classes.arrow, classes.left, classes.disabled];\r\n        let rightArrowClasses = [classes.arrow, classes.right];\r\n        let rightArrowDisabledClasses = [classes.arrow, classes.right, classes.disabled];\r\n\r\n        return (\r\n            <Auxilliary >\r\n                <div className={classes.Carousel}>\r\n\r\n                <div className={classes.Card} >\r\n\r\n                <div className={classes.progress_inner}>\r\n                    <input id={classes.step1} name=\"step\" type=\"radio\"\r\n                        ref={this.button1} value=\"1\" onClick={event => { this.loadSteps(event) }} />\r\n                    <input id={classes.step2} name='step' type='radio'\r\n                        ref={this.button2} value=\"2\" onClick={event => { this.loadSteps(event) }} />\r\n                    <input id={classes.step3} name='step' type='radio'\r\n                        ref={this.button3} value=\"3\" onClick={event => { this.loadSteps(event) }} />\r\n\r\n                    <div className={classes.progress_inner__step}>\r\n                        <label for={classes.step1}>Base</label>\r\n                    </div>\r\n                    <div className={classes.progress_inner__step}>\r\n                        <label for={classes.step2}>Proteins</label>\r\n                    </div>\r\n                    <div className={classes.progress_inner__step}>\r\n                        <label for={classes.step3}>Toppings</label>\r\n                    </div>\r\n                    <div className={classes.progress_inner__bar}></div>\r\n                    <div className={classes.progress_inner__bar_set}></div>\r\n                </div>\r\n\r\n                    <fieldset>\r\n\r\n                        {step}\r\n\r\n                        {this.state.goUpDisable ?\r\n                            <a href=\"#\" className={leftArrowDisabledClasses.join(' ')}></a> :\r\n                            <a href=\"#\" className={leftArrowClasses.join(' ')}\r\n                                onClick={event => this.stepsGoUp(event)}\r\n                            ></a>}\r\n                        {this.state.goDownDisable ?\r\n                            <a href=\"#\" className={rightArrowDisabledClasses.join(' ')}></a> :\r\n                            <a href=\"#\" className={rightArrowClasses.join(' ')}\r\n                                onClick={event => this.stepsGoDown(event)}\r\n                            ></a>}\r\n\r\n                        <button\r\n                            className={classes.fillButton}\r\n                            disabled={!this.props.purchasable}\r\n                            onClick={this.props.ordered}>\r\n                            {this.props.isAuth ? \"Order Now\" : \"Sign In to Order\"}\r\n                        </button>\r\n\r\n                    </fieldset>\r\n                </div></div>\r\n            </Auxilliary>\r\n\r\n        );\r\n    };\r\n\r\n\r\n}\r\n// class Carousel extends Component {\r\n\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.button1 = React.createRef();\r\n//         this.button2 = React.createRef();\r\n//         this.button3 = React.createRef();    \r\n\r\n//     }\r\n\r\n//         state = {\r\n//         index: \"1\",\r\n//         showCheckoutButton: false,\r\n//         goUpDisable: true,\r\n//         goDownDisable: false,\r\n//         animation: \"played\"\r\n//     };\r\n\r\n\r\n\r\n//     toggleSteps = (idx, direction) => {\r\n//         if (idx === \"1\") {\r\n//             this.setState({ index: \"1\", showCheckoutButton: false, goUpDisable: true, goDownDisable: false, animation: direction });\r\n//             console.log(\"set state: \", this.state.animation);\r\n//             this.button1.current.checked = true;\r\n//             this.button2.current.checked = false;\r\n//             this.button3.current.checked = false;\r\n//         }\r\n//         if (idx === \"2\") {\r\n//             this.setState({ index: \"2\", showCheckoutButton: false, goUpDisable: false, goDownDisable: false, animation: direction });\r\n//             console.log(\"set state: \", this.state.animation);\r\n//             this.button1.current.checked = false;\r\n//             this.button2.current.checked = true;\r\n//             this.button3.current.checked = false;\r\n//         }\r\n//         if (idx === \"3\") {\r\n//             this.setState({ index: \"3\", showCheckoutButton: true, goUpDisable: false, goDownDisable: true, animation: direction });\r\n//             console.log(\"set state: \", this.state.animation);\r\n//             this.button1.current.checked = false;\r\n//             this.button2.current.checked = false;\r\n//             this.button3.current.checked = true;\r\n//         }\r\n//     }\r\n\r\n//     loadSteps = (event) => {\r\n//         if(Number(event.target.value) > Number(this.state.index)){\r\n//             this.toggleSteps(event.target.value, \"down\");\r\n//         }\r\n//         if(Number(event.target.value) < Number(this.state.index)){\r\n//             this.toggleSteps(event.target.value, \"up\");\r\n//         }        \r\n//     }\r\n\r\n//     stepsGoDown = () => {\r\n//         if (this.state.index !== TOTAL_STEPS) {\r\n//             this.toggleSteps(String(Number(this.state.index) + 1), \"down\");\r\n//         }\r\n//     }\r\n//     stepsGoUp = () => {\r\n//         if (this.state.index !== \"1\") {\r\n//             this.toggleSteps(String(Number(this.state.index) - 1), \"up\");\r\n//         }\r\n//     }\r\n\r\n\r\n//     resetAnimation = () => {\r\n//         this.setState({ animation: \"played\" });        \r\n//         console.log(\"reset: \", this.state.animation);\r\n//     }\r\n//     render() {\r\n//         let step = null;\r\n//         if (this.state.index === \"1\") {\r\n//             step = <BuildControls\r\n//                 isAuth={this.props.isAuth}\r\n//                 ingredientAdded={this.props.ingredientAdded}\r\n//                 ingredientRemoved={this.props.ingredientRemoved}\r\n//                 ingredientsReset={this.props.ingredientsReset}\r\n//                 totalPrice={this.props.totalPrice}\r\n//                 purchasable={this.props.purchasable}\r\n//                 ordered={this.props.ordered}\r\n//                 disable={this.props.disable}\r\n//                 ings={this.props.ings}\r\n//                 category=\"base\" />;\r\n//         }\r\n//         if (this.state.index === \"2\") {\r\n//             step = <BuildControls\r\n//                 isAuth={this.props.isAuth}\r\n//                 ingredientAdded={this.props.ingredientAdded}\r\n//                 ingredientRemoved={this.props.ingredientRemoved}\r\n//                 ingredientsReset={this.props.ingredientsReset}\r\n//                 totalPrice={this.props.totalPrice}\r\n//                 purchasable={this.props.purchasable}\r\n//                 ordered={this.props.ordered}\r\n//                 disable={this.props.disable}\r\n//                 ings={this.props.ings}\r\n//                 category=\"proteins\" />;\r\n//         }\r\n//         if (this.state.index === \"3\") {\r\n//             step = <BuildControls\r\n//                 isAuth={this.props.isAuth}\r\n//                 ingredientAdded={this.props.ingredientAdded}\r\n//                 ingredientRemoved={this.props.ingredientRemoved}\r\n//                 ingredientsReset={this.props.ingredientsReset}\r\n//                 totalPrice={this.props.totalPrice}\r\n//                 purchasable={this.props.purchasable}\r\n//                 ordered={this.props.ordered}\r\n//                 disable={this.props.disable}\r\n//                 ings={this.props.ings}\r\n//                 category=\"toppings\" />;\r\n//         }\r\n\r\n//         let leftArrowClasses = [classes.arrow, classes.left];\r\n//         let leftArrowDisabledClasses = [classes.arrow, classes.left, classes.disabled];\r\n//         let rightArrowClasses = [classes.arrow, classes.right];\r\n//         let rightArrowDisabledClasses = [classes.arrow, classes.right, classes.disabled];\r\n//         let animationClass = [classes.Controls];\r\n//         if (this.state.animation === \"up\") {\r\n//             animationClass = [classes.Controls, classes.goUp];\r\n//         }\r\n//         if (this.state.animation === \"down\"){\r\n//             animationClass= [classes.Controls, classes.goDown];\r\n//         }\r\n//         console.log(animationClass.join(' '));\r\n//         return (\r\n//             <Auxilliary>\r\n//                 <div className={classes.progress_inner} >\r\n//                     <input id={classes.step1} name=\"step\" type=\"radio\"\r\n//                         ref={this.button1} value=\"1\" onClick={event => { this.loadSteps(event) }} />\r\n//                     <input id={classes.step2} name='step' type='radio'\r\n//                         ref={this.button2} value=\"2\" onClick={event => { this.loadSteps(event) }} />\r\n//                     <input id={classes.step3} name='step' type='radio'\r\n//                         ref={this.button3} value=\"3\" onClick={event => { this.loadSteps(event) }} />\r\n//                     <div className={classes.progress_inner__step}>\r\n//                         <label for={classes.step1}>Base</label>\r\n//                     </div>\r\n//                     <div className={classes.progress_inner__step}>\r\n//                         <label for={classes.step2}>Proteins</label>\r\n//                     </div>\r\n//                     <div className={classes.progress_inner__step}>\r\n//                         <label for={classes.step3}>Toppings</label>\r\n//                     </div>\r\n//                     <div className={classes.progress_inner__bar}></div>\r\n//                     <div className={classes.progress_inner__bar_set}></div>\r\n\r\n//                 </div>\r\n//                 <div className={classes.Card} >\r\n//                     <fieldset>\r\n//                         <div className={animationClass.join(' ')} onAnimationEnd={event=>this.resetAnimation(event)}>{step}</div>\r\n//                         {this.state.goUpDisable ?\r\n//                             <a href=\"#\"  className={leftArrowDisabledClasses.join(' ')}></a> :\r\n//                             <a href=\"#\" className={leftArrowClasses.join(' ')}\r\n//                                 onClick={event=>this.stepsGoUp(event)}\r\n//                                 ></a>}\r\n//                         {this.state.goDownDisable ?\r\n//                             <a href=\"#\" className={rightArrowDisabledClasses.join(' ')}></a> :\r\n//                             <a href=\"#\" className={rightArrowClasses.join(' ')}\r\n//                                 onClick={event=>this.stepsGoDown(event)}\r\n//                             ></a>}\r\n//                     </fieldset>\r\n//                 </div>\r\n\r\n//             </Auxilliary>\r\n\r\n//         );\r\n//     };\r\n\r\n\r\n// }\r\n\r\n\r\nexport default Carousel;"]},"metadata":{},"sourceType":"module"}