{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITCoursesProjects\\\\React\\\\PokeBuilder\\\\poke-builder\\\\src\\\\components\\\\UI\\\\Input\\\\Input.js\";\nimport React from 'react';\nimport classes from './Input.module.css';\nimport Alert from 'react-bootstrap/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst input = props => {\n  let InputElement = null;\n  const inputClasses = [classes.InputElement];\n\n  if (!props.valid && props.touched) {\n    inputClasses.push(classes.Invalid);\n  }\n\n  switch (props.elementType) {\n    case 'input':\n      InputElement = /*#__PURE__*/_jsxDEV(\"input\", {\n        className: inputClasses.join(' '),\n        ...props.elementConfig,\n        value: props.value,\n        onChange: props.changed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 28\n      }, this);\n      break;\n\n    case 'textArea':\n      InputElement = /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: inputClasses.join(' '),\n        ...props.elementConfig,\n        value: props.value,\n        onChange: props.changed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 28\n      }, this);\n      break;\n\n    case 'select':\n      InputElement = /*#__PURE__*/_jsxDEV(\"select\", {\n        className: inputClasses.join(' '),\n        value: props.value,\n        onChange: props.changed,\n        children: props.elementConfig.options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.value,\n          children: option.displayValue\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this);\n      break;\n\n    default:\n      InputElement = /*#__PURE__*/_jsxDEV(\"input\", {\n        className: inputClasses.join(' '),\n        ...props.elementConfig,\n        value: props.value,\n        onChange: props.changed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 28\n      }, this);\n      break;\n  }\n\n  let errorMessage = null;\n\n  if (props.errorMsg) {\n    errorMessage = props.errorMsg.map(msg => /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: msg\n    }, msg, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.Input,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: classes.Label,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), InputElement, errorMessage, /*#__PURE__*/_jsxDEV(\"i\", {\n      className: classes.InputIcon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\nexport default input;","map":{"version":3,"sources":["D:/ITCoursesProjects/React/PokeBuilder/poke-builder/src/components/UI/Input/Input.js"],"names":["React","classes","Alert","input","props","InputElement","inputClasses","valid","touched","push","Invalid","elementType","join","elementConfig","value","changed","options","map","option","displayValue","errorMessage","errorMsg","msg","Input","Label","label","InputIcon"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrB,MAAIC,YAAY,GAAG,IAAnB;AACA,QAAMC,YAAY,GAAG,CAACL,OAAO,CAACI,YAAT,CAArB;;AACA,MAAI,CAACD,KAAK,CAACG,KAAP,IAAgBH,KAAK,CAACI,OAA1B,EAAmC;AAC/BF,IAAAA,YAAY,CAACG,IAAb,CAAkBR,OAAO,CAACS,OAA1B;AACH;;AACD,UAAQN,KAAK,CAACO,WAAd;AACI,SAAM,OAAN;AACIN,MAAAA,YAAY,gBAAG;AACX,QAAA,SAAS,EAAEC,YAAY,CAACM,IAAb,CAAkB,GAAlB,CADA;AAAA,WAEPR,KAAK,CAACS,aAFC;AAGX,QAAA,KAAK,EAAET,KAAK,CAACU,KAHF;AAIX,QAAA,QAAQ,EAAEV,KAAK,CAACW;AAJL;AAAA;AAAA;AAAA;AAAA,cAAf;AAKA;;AACJ,SAAM,UAAN;AACIV,MAAAA,YAAY,gBAAG;AACX,QAAA,SAAS,EAAEC,YAAY,CAACM,IAAb,CAAkB,GAAlB,CADA;AAAA,WAEPR,KAAK,CAACS,aAFC;AAGX,QAAA,KAAK,EAAET,KAAK,CAACU,KAHF;AAIX,QAAA,QAAQ,EAAEV,KAAK,CAACW;AAJL;AAAA;AAAA;AAAA;AAAA,cAAf;AAKA;;AACJ,SAAM,QAAN;AACIV,MAAAA,YAAY,gBACR;AACI,QAAA,SAAS,EAAEC,YAAY,CAACM,IAAb,CAAkB,GAAlB,CADf;AAEI,QAAA,KAAK,EAAER,KAAK,CAACU,KAFjB;AAGI,QAAA,QAAQ,EAAEV,KAAK,CAACW,OAHpB;AAAA,kBAIKX,KAAK,CAACS,aAAN,CAAoBG,OAApB,CAA4BC,GAA5B,CAAgCC,MAAM,iBACnC;AACI,UAAA,KAAK,EAAEA,MAAM,CAACJ,KADlB;AAAA,oBAEKI,MAAM,CAACC;AAFZ,WAAaD,MAAM,CAACJ,KAApB;AAAA;AAAA;AAAA;AAAA,gBADH;AAJL;AAAA;AAAA;AAAA;AAAA,cADJ;AAWA;;AACJ;AACIT,MAAAA,YAAY,gBAAG;AACX,QAAA,SAAS,EAAEC,YAAY,CAACM,IAAb,CAAkB,GAAlB,CADA;AAAA,WAEPR,KAAK,CAACS,aAFC;AAGX,QAAA,KAAK,EAAET,KAAK,CAACU,KAHF;AAIX,QAAA,QAAQ,EAAEV,KAAK,CAACW;AAJL;AAAA;AAAA;AAAA;AAAA,cAAf;AAKA;AAlCR;;AAoCA,MAAIK,YAAY,GAAG,IAAnB;;AACA,MAAIhB,KAAK,CAACiB,QAAV,EAAoB;AAChBD,IAAAA,YAAY,GAAGhB,KAAK,CAACiB,QAAN,CAAeJ,GAAf,CAAmBK,GAAG,iBACjC,QAAC,KAAD;AAAiB,MAAA,OAAO,EAAC,QAAzB;AAAA,gBAAmCA;AAAnC,OAAYA,GAAZ;AAAA;AAAA;AAAA;AAAA,YADW,CAAf;AAEH;;AACD,sBACI;AAAK,IAAA,SAAS,EAAErB,OAAO,CAACsB,KAAxB;AAAA,4BACI;AAAO,MAAA,SAAS,EAAEtB,OAAO,CAACuB,KAA1B;AAAA,gBAAkCpB,KAAK,CAACqB;AAAxC;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKpB,YAFL,EAGKe,YAHL,eAII;AAAG,MAAA,SAAS,EAAEnB,OAAO,CAACyB;AAAtB;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAxDD;;AA0DA,eAAevB,KAAf","sourcesContent":["import React from 'react';\r\nimport classes from './Input.module.css';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nconst input = (props) => {\r\n    let InputElement = null;\r\n    const inputClasses = [classes.InputElement];\r\n    if (!props.valid && props.touched) {\r\n        inputClasses.push(classes.Invalid);\r\n    }\r\n    switch (props.elementType) {\r\n        case ('input'):\r\n            InputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />\r\n            break;\r\n        case ('textArea'):\r\n            InputElement = <textarea\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />\r\n            break;\r\n        case ('select'):\r\n            InputElement =\r\n                <select\r\n                    className={inputClasses.join(' ')}\r\n                    value={props.value}\r\n                    onChange={props.changed}>\r\n                    {props.elementConfig.options.map(option => (\r\n                        <option key={option.value}\r\n                            value={option.value}>\r\n                            {option.displayValue}\r\n                        </option>))}\r\n                </select>\r\n            break;\r\n        default:\r\n            InputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />\r\n            break;\r\n    }\r\n    let errorMessage = null;\r\n    if (props.errorMsg) {\r\n        errorMessage = props.errorMsg.map(msg => (\r\n            <Alert key={msg} variant=\"danger\">{msg}</Alert>));\r\n    }\r\n    return (\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {InputElement}\r\n            {errorMessage}\r\n            <i className={classes.InputIcon}></i>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default input;"]},"metadata":{},"sourceType":"module"}