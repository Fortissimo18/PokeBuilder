{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITCoursesProjects\\\\React\\\\PokeBuilder\\\\poke-builder\\\\src\\\\components\\\\Poke\\\\BuildControls\\\\BuildControls.js\";\nimport React from 'react';\nimport classes from './BuildControls.module.css';\nimport BuildControl from './BuildControl/BuildControl';\nimport Auxilliary from '../../../hoc/Auxilliary';\nimport Animate from 'animate.css-react';\nimport 'animate.css/animate.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst controls = {\n  base: {\n    value: '',\n    ingredients: [{\n      label: 'Quinoa',\n      type: 'quinoa'\n    }, {\n      label: 'White Rice',\n      type: 'whiterice'\n    }, {\n      label: 'Brown Rice',\n      type: 'brownrice'\n    }]\n  },\n  proteins: [{\n    label: 'Prawn',\n    type: 'prawn'\n  }, {\n    label: 'Egg',\n    type: 'egg'\n  }],\n  toppings: [{\n    label: 'Lettuce',\n    type: 'lettuce'\n  }]\n};\n\nconst selectionChangedHandler = (event, props) => {\n  controls.base.value = event.target.value;\n  let resetIngNames = [];\n  controls.base.ingredients.forEach(ing => {\n    if (ing.type !== controls.base.value) {\n      resetIngNames.push(ing.type);\n    }\n  });\n  props.ingredientsReset(resetIngNames);\n  props.ingredientAdded(controls.base.value);\n};\n\nconst buildControls = props => {\n  let animationClass = [classes.Controls];\n\n  if (props.animationCSS === \"up\") {\n    animationClass = [classes.Controls, classes.goUp];\n  }\n\n  if (props.animationCSS === \"down\") {\n    animationClass = [classes.Controls, classes.goDown];\n  }\n\n  let titleAnimate = classes.titleStatic;\n\n  if (props.animationCSS === \"up\" || props.animationCSS === \"down\") {\n    titleAnimate = classes.title;\n  }\n\n  let transformedControls = [];\n\n  if (props.category === 'base') {\n    controls['base'].ingredients.map(base => transformedControls.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.radioGroup,\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        className: classes.radioLabel,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: base.type,\n          name: \"base\",\n          value: base.type,\n          onChange: event => selectionChangedHandler(event, props)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: classes.innerLabel,\n          children: base.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)));\n  } else {\n    controls[props.category].forEach(ctrl => {\n      transformedControls.push( /*#__PURE__*/_jsxDEV(BuildControl, {\n        label: ctrl.label,\n        added: () => props.ingredientAdded(ctrl.type),\n        removed: () => props.ingredientRemoved(ctrl.type),\n        disable: props.disable[ctrl.type],\n        numIngs: props.ings[ctrl.type],\n        animationCSS: props.animationCSS,\n        animationReset: props.animationReset\n      }, ctrl.label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this));\n    });\n  }\n\n  let transformedCategory = [];\n  props.category.toCharArray.forEach(letter => {\n    transformedCategory.push( /*#__PURE__*/_jsxDEV(\"span\", {\n      children: letter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: titleAnimate,\n      children: [\"Choose the \", transformedCategory]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: animationClass.join(' '),\n      onAnimationEnd: props.animationReset,\n      children: transformedControls\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: classes.totalPrice,\n      children: [\"Total Price: \", props.totalPrice.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.fillButton,\n        disabled: !props.purchasable,\n        onClick: props.ordered,\n        children: props.isAuth ? \"Order Now\" : \"Sign In to Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n\nexport default buildControls;","map":{"version":3,"sources":["D:/ITCoursesProjects/React/PokeBuilder/poke-builder/src/components/Poke/BuildControls/BuildControls.js"],"names":["React","classes","BuildControl","Auxilliary","Animate","controls","base","value","ingredients","label","type","proteins","toppings","selectionChangedHandler","event","props","target","resetIngNames","forEach","ing","push","ingredientsReset","ingredientAdded","buildControls","animationClass","Controls","animationCSS","goUp","goDown","titleAnimate","titleStatic","title","transformedControls","category","map","radioGroup","radioLabel","innerLabel","ctrl","ingredientRemoved","disable","ings","animationReset","transformedCategory","toCharArray","letter","join","totalPrice","toFixed","fillButton","purchasable","ordered","isAuth"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\nimport Auxilliary from '../../../hoc/Auxilliary';\r\nimport Animate from 'animate.css-react';\r\nimport 'animate.css/animate.css';\r\n\r\nconst controls = {\r\n    base: {\r\n        value: '',\r\n        ingredients: [\r\n            { label: 'Quinoa', type: 'quinoa' },\r\n            { label: 'White Rice', type: 'whiterice' },\r\n            { label: 'Brown Rice', type: 'brownrice' },],\r\n    },\r\n    proteins: [\r\n        { label: 'Prawn', type: 'prawn' },\r\n        { label: 'Egg', type: 'egg' },],\r\n    toppings: [\r\n        { label: 'Lettuce', type: 'lettuce' },],\r\n\r\n};\r\n\r\n\r\nconst selectionChangedHandler = (event, props) => {\r\n    controls.base.value = event.target.value;\r\n    let resetIngNames = []\r\n    controls.base.ingredients.forEach(ing => {\r\n        if (ing.type !== controls.base.value) {\r\n            resetIngNames.push(ing.type);\r\n        }\r\n    });\r\n    props.ingredientsReset(resetIngNames);\r\n    props.ingredientAdded(controls.base.value);\r\n}\r\n\r\n\r\nconst buildControls = (props) => {\r\n\r\n    let animationClass = [classes.Controls];\r\n    if (props.animationCSS === \"up\") {\r\n        animationClass = [classes.Controls, classes.goUp];\r\n    }\r\n    if (props.animationCSS === \"down\") {\r\n        animationClass = [classes.Controls, classes.goDown];\r\n    }\r\n    let titleAnimate=classes.titleStatic;\r\n    if (props.animationCSS === \"up\" || props.animationCSS === \"down\" ) {\r\n        titleAnimate = classes.title;\r\n    }\r\n\r\n    let transformedControls = [];\r\n\r\n    if (props.category === 'base') {\r\n        controls['base'].ingredients.map(base => (transformedControls.push(\r\n            <div className={classes.radioGroup}>\r\n                <label className={classes.radioLabel} >\r\n                    <input type=\"radio\" id={base.type} name=\"base\" value={base.type} onChange={(event) => selectionChangedHandler(event, props)}></input>\r\n                    <span className={classes.innerLabel}>{base.label}</span>\r\n                </label>\r\n            </div>\r\n        )));\r\n    }\r\n\r\n    else {\r\n        controls[props.category].forEach(ctrl => {\r\n            transformedControls.push(\r\n                <BuildControl\r\n                    key={ctrl.label}\r\n                    label={ctrl.label}\r\n                    added={() => props.ingredientAdded(ctrl.type)}\r\n                    removed={() => props.ingredientRemoved(ctrl.type)}\r\n                    disable={props.disable[ctrl.type]}\r\n                    numIngs={props.ings[ctrl.type]}\r\n                    animationCSS={props.animationCSS}\r\n                    animationReset={props.animationReset}\r\n                />\r\n            );\r\n        });\r\n    }\r\n\r\nlet transformedCategory = [];\r\n\r\nprops.category.toCharArray.forEach(letter=>{\r\n    transformedCategory.push(\r\n        <span>{letter}</span> \r\n    )\r\n})\r\n    return (\r\n        <div>\r\n            <div className={titleAnimate}> \r\n            Choose the {transformedCategory}\r\n            </div>\r\n\r\n            <div className={animationClass.join(' ')} onAnimationEnd={props.animationReset}>\r\n                {transformedControls}\r\n            </div>\r\n            <p className={classes.totalPrice}>Total Price: {props.totalPrice.toFixed(2)}</p>\r\n            <div>\r\n                <button\r\n                    className={classes.fillButton}\r\n                    disabled={!props.purchasable}\r\n                    onClick={props.ordered}>\r\n                    {props.isAuth ? \"Order Now\" : \"Sign In to Order\"}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default buildControls;"]},"metadata":{},"sourceType":"module"}