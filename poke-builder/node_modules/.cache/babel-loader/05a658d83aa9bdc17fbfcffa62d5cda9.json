{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nconst initialState = {\n  // ingredients: {\n  //         salad: 0,\n  //         bacon: 0,\n  //         cheese: 0,\n  //         meat: 0\n  //     },\n  ingredients: null,\n  totalPrice: 4,\n  error: false\n};\nconst INGREDIENT_PRICE = {\n  salad: 0.5,\n  bacon: 1,\n  cheese: 0.4,\n  meat: 2\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      return { //overwrite the copy of ingredients\n        ...state,\n        ingredients: { ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n        },\n        totalPrice: state.totalPrice + INGREDIENT_PRICE[action.ingredientName]\n      };\n\n    case actionTypes.REMOVE_INGREDIENT:\n      return { ...state,\n        ingredients: { ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n        },\n        totalPrice: state.totalPrice - INGREDIENT_PRICE[action.ingredientName]\n      };\n\n    case actionTypes.SET_INGREDIENTS:\n      return { ...state,\n        ingredients: action.ingredients,\n        error: false\n      };\n\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\n      {\n        return { ...state,\n          error: true\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/ITCoursesProjects/React/PokeBuilder/poke-builder/src/store/reducers/pokeBuilder.js"],"names":["actionTypes","initialState","ingredients","totalPrice","error","INGREDIENT_PRICE","salad","bacon","cheese","meat","reducer","state","action","type","ADD_INGREDIENT","ingredientName","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AAEA,MAAMC,YAAY,GAAE;AACpB;AACA;AACA;AACA;AACA;AACA;AACIC,EAAAA,WAAW,EAAC,IAPI;AAQhBC,EAAAA,UAAU,EAAE,CARI;AAShBC,EAAAA,KAAK,EAAC;AATU,CAApB;AAYA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAE,GADc;AAErBC,EAAAA,KAAK,EAAE,CAFc;AAGrBC,EAAAA,MAAM,EAAE,GAHa;AAIrBC,EAAAA,IAAI,EAAE;AAJe,CAAzB;;AAQA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAAkC;AAC9C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKb,WAAW,CAACc,cAAjB;AACI,aAAM,EACF;AACA,WAAGH,KAFD;AAGFT,QAAAA,WAAW,EAAC,EACR,GAAGS,KAAK,CAACT,WADD;AAER,WAACU,MAAM,CAACG,cAAR,GAAyBJ,KAAK,CAACT,WAAN,CAAkBU,MAAM,CAACG,cAAzB,IAA0C;AAF3D,SAHV;AAOFZ,QAAAA,UAAU,EAAEQ,KAAK,CAACR,UAAN,GAAmBE,gBAAgB,CAACO,MAAM,CAACG,cAAR;AAP7C,OAAN;;AASJ,SAAKf,WAAW,CAACgB,iBAAjB;AACI,aAAM,EACF,GAAGL,KADD;AAEFT,QAAAA,WAAW,EAAC,EACR,GAAGS,KAAK,CAACT,WADD;AAER,WAACU,MAAM,CAACG,cAAR,GAAyBJ,KAAK,CAACT,WAAN,CAAkBU,MAAM,CAACG,cAAzB,IAA0C;AAF3D,SAFV;AAMFZ,QAAAA,UAAU,EAAEQ,KAAK,CAACR,UAAN,GAAmBE,gBAAgB,CAACO,MAAM,CAACG,cAAR;AAN7C,OAAN;;AAQA,SAAKf,WAAW,CAACiB,eAAjB;AACI,aAAM,EACF,GAAGN,KADD;AAEFT,QAAAA,WAAW,EAAEU,MAAM,CAACV,WAFlB;AAGFE,QAAAA,KAAK,EAAC;AAHJ,OAAN;;AAKJ,SAAKJ,WAAW,CAACkB,wBAAjB;AACI;AACA,eAAM,EACF,GAAGP,KADD;AAEFP,UAAAA,KAAK,EAAC;AAFJ,SAAN;AAIH;;AACL;AAAS,aAAOO,KAAP;AAjCb;AAmCH,CApCD;;AAsCA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState ={\r\n// ingredients: {\r\n//         salad: 0,\r\n//         bacon: 0,\r\n//         cheese: 0,\r\n//         meat: 0\r\n//     },\r\n    ingredients:null,\r\n    totalPrice: 4,\r\n    error:false\r\n};\r\n\r\nconst INGREDIENT_PRICE = {\r\n    salad: 0.5,\r\n    bacon: 1,\r\n    cheese: 0.4,\r\n    meat: 2\r\n};\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case actionTypes.ADD_INGREDIENT:\r\n            return{\r\n                //overwrite the copy of ingredients\r\n                ...state,\r\n                ingredients:{\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]: state.ingredients[action.ingredientName] +1 \r\n                },\r\n                totalPrice: state.totalPrice + INGREDIENT_PRICE[action.ingredientName]\r\n            };\r\n        case actionTypes.REMOVE_INGREDIENT:\r\n            return{\r\n                ...state,\r\n                ingredients:{\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]: state.ingredients[action.ingredientName] -1 \r\n                },\r\n                totalPrice: state.totalPrice - INGREDIENT_PRICE[action.ingredientName]\r\n            };\r\n            case actionTypes.SET_INGREDIENTS:\r\n                return{\r\n                    ...state,\r\n                    ingredients: action.ingredients,\r\n                    error:false\r\n            };\r\n            case actionTypes.FETCH_INGREDIENTS_FAILED:\r\n                {\r\n                return{\r\n                    ...state,\r\n                    error:true\r\n                }\r\n            }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}