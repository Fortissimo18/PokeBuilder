{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITCoursesProjects\\\\React\\\\PokeBuilder\\\\poke-builder\\\\src\\\\components\\\\UI\\\\Cursor\\\\Cursor.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from 'react';\nimport { MDBContainer, MDBRow, MDBCol, MDBStepper, MDBStep, MDBBtn, MDBInput } from \"mdbreact\";\nimport classes from './Cursor.module.css';\nimport Auxilliary from '../../../hoc/Auxilliary';\nimport { motion, useMotionValue, useSpring } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cursor() {\n  _s();\n\n  //   const cursorX = useMotionValue(-100);\n  //   const cursorY = useMotionValue(-100);\n  //   const springConfig = { damping: 25, stiffness: 700 };\n  //   const cursorXSpring = useSpring(cursorX, springConfig);\n  //   const cursorYSpring = useSpring(cursorY, springConfig);\n  //   // const [position, setPosition] = useState({ x: 0, y: 0 });\n  //   const [clicked, setClicked] = useState(false);\n  //   const [linkHovered, setLinkHovered] = useState(false);\n  //   // const [hidden, setHidden] = useState(false);\n  //   useEffect(() => {\n  //       addEventListeners();\n  //       handleLinkHoverEvents();\n  //       return () => removeEventListeners();\n  //   }, []);\n  //   const addEventListeners = () => {\n  //       document.addEventListener(\"mousemove\", onMouseMove);\n  //     //   document.addEventListener(\"mouseenter\", onMouseEnter);\n  //     //   document.addEventListener(\"mouseleave\", onMouseLeave);\n  //       document.addEventListener(\"mousedown\", onMouseDown);\n  //       document.addEventListener(\"mouseup\", onMouseUp);\n  //   };\n  //   const removeEventListeners = () => {\n  //       document.removeEventListener(\"mousemove\", onMouseMove);\n  //     //   document.removeEventListener(\"mouseenter\", onMouseEnter);\n  //     //   document.removeEventListener(\"mouseleave\", onMouseLeave);\n  //       document.removeEventListener(\"mousedown\", onMouseDown);\n  //       document.removeEventListener(\"mouseup\", onMouseUp);\n  //   };\n  //   const onMouseMove = (e) => {\n  //     cursorX.set(e.clientX-16)\n  //     cursorY.set(e.clientY-80)\n  //       // setPosition({ cursorX: e.clientX-15, cursorY: e.clientY-15 });\n  //   };\n  //   const onMouseDown = () => {\n  //       setClicked(true);\n  //       console.log(clicked);\n  //   };\n  //   const onMouseUp = () => {\n  //       setClicked(false);\n  //       console.log(clicked)\n  //   };\n  // //   const onMouseLeave = () => {\n  // //       setHidden(true);\n  // //   };\n  // //   const onMouseEnter = () => {\n  // //       setHidden(false);\n  // //   };\n  //   const handleLinkHoverEvents = () => {\n  //       document.querySelectorAll(\"button\").forEach((el) => {\n  //           el.addEventListener(\"mouseover\", () => setLinkHovered(true));\n  //           el.addEventListener(\"mouseout\", () => setLinkHovered(false));\n  //       });\n  //   };\n  //   let cursorClasses = [classes.cursor];\n  //   if(clicked){\n  //     // cursorClasses.push(classes.clicked);\n  //     cursorClasses = [classes.clicked]\n  //   }\n  // //   if(hidden){\n  // //     cursorClasses.push(classes.hidden);\n  // //   }\n  //   if(linkHovered){\n  //     cursorClasses.push(classes.hovered);\n  //   }\n  //   return (\n  //     <Auxilliary>\n  //       <motion.div\n  //           className={cursorClasses.join(' ')}\n  //           style={{\n  //             translateX: cursorXSpring,\n  //             translateY: cursorYSpring,\n  //           }}\n  //           // style={{ left: `${position.x}px`, top: `${position.y}px` }}\n  //       />\n  // </Auxilliary>\n  //   );\n  // const cursorX = useMotionValue(-100);\n  // const cursorY = useMotionValue(-100);\n  // const springConfig = { damping: 25, stiffness: 700 };\n  // const cursorXSpring = useSpring(cursorX, springConfig);\n  // const cursorYSpring = useSpring(cursorY, springConfig);\n  const [position, setPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [clicked, setClicked] = useState(false);\n  const [linkHovered, setLinkHovered] = useState(false);\n  const [scroll, setScroll] = useState({\n    x: 0,\n    y: 0\n  });\n  const [hidden, setHidden] = useState(false);\n  useEffect(() => {\n    addEventListeners();\n    handleLinkHoverEvents();\n    return () => removeEventListeners();\n  }, []);\n\n  const addEventListeners = () => {\n    document.addEventListener(\"mousemove\", onMouseMove);\n    document.addEventListener(\"mouseenter\", onMouseEnter);\n    document.addEventListener(\"mouseleave\", onMouseLeave);\n    document.addEventListener(\"mousedown\", onMouseDown);\n    document.addEventListener(\"mouseup\", onMouseUp);\n    window.addEventListener(\"scroll\", onScroll);\n  };\n\n  const removeEventListeners = () => {\n    document.removeEventListener(\"mousemove\", onMouseMove);\n    document.removeEventListener(\"mouseenter\", onMouseEnter);\n    document.removeEventListener(\"mouseleave\", onMouseLeave);\n    document.removeEventListener(\"mousedown\", onMouseDown);\n    document.removeEventListener(\"mouseup\", onMouseUp);\n    window.removeEventListener(\"scroll\", onScroll);\n  };\n\n  const onScroll = e => {\n    console.log(e.originalEvent);\n    setScroll({\n      x: e.pageX,\n      y: e.pageY\n    });\n  };\n\n  const onMouseMove = e => {\n    setPosition({\n      x: e.clientX - 15,\n      y: e.clientY - 15\n    });\n  };\n\n  const onMouseDown = () => {\n    setClicked(true);\n  };\n\n  const onMouseUp = () => {\n    setClicked(false);\n  };\n\n  const onMouseLeave = () => {\n    setHidden(true);\n  };\n\n  const onMouseEnter = () => {\n    setHidden(false);\n  };\n\n  const handleLinkHoverEvents = () => {\n    document.querySelectorAll(\"button\").forEach(el => {\n      el.addEventListener(\"mouseover\", () => setLinkHovered(true));\n      el.addEventListener(\"mouseout\", () => setLinkHovered(false));\n    });\n    document.querySelectorAll(\"a\").forEach(el => {\n      el.addEventListener(\"mouseover\", () => setLinkHovered(true));\n      el.addEventListener(\"mouseout\", () => setLinkHovered(false));\n    });\n  };\n\n  let cursorClasses = [classes.cursor];\n\n  if (clicked) {\n    cursorClasses.push(classes.clicked);\n  }\n\n  if (hidden) {\n    cursorClasses.push(classes.hidden);\n  }\n\n  if (linkHovered) {\n    cursorClasses.push(classes.hovered);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Auxilliary, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cursorClasses.join(' '),\n      style: {\n        left: `${position.x}px`,\n        top: `${position.y}px`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Cursor, \"dpd8jZ8+5Pr0o6M7rNqG7DMNjBg=\");\n\n_c = Cursor;\nexport default Cursor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cursor\");","map":{"version":3,"sources":["D:/ITCoursesProjects/React/PokeBuilder/poke-builder/src/components/UI/Cursor/Cursor.js"],"names":["React","Component","useState","useEffect","MDBContainer","MDBRow","MDBCol","MDBStepper","MDBStep","MDBBtn","MDBInput","classes","Auxilliary","motion","useMotionValue","useSpring","Cursor","position","setPosition","x","y","clicked","setClicked","linkHovered","setLinkHovered","scroll","setScroll","hidden","setHidden","addEventListeners","handleLinkHoverEvents","removeEventListeners","document","addEventListener","onMouseMove","onMouseEnter","onMouseLeave","onMouseDown","onMouseUp","window","onScroll","removeEventListener","e","console","log","originalEvent","pageX","pageY","clientX","clientY","querySelectorAll","forEach","el","cursorClasses","cursor","push","hovered","join","left","top"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\r\nimport { MDBContainer, MDBRow, MDBCol, MDBStepper, MDBStep, MDBBtn, MDBInput } from \"mdbreact\";\r\nimport classes from './Cursor.module.css';\r\nimport Auxilliary from '../../../hoc/Auxilliary';\r\nimport { motion, useMotionValue, useSpring } from \"framer-motion\"\r\n\r\nfunction Cursor() {\r\n\r\n//   const cursorX = useMotionValue(-100);\r\n//   const cursorY = useMotionValue(-100);\r\n//   const springConfig = { damping: 25, stiffness: 700 };\r\n//   const cursorXSpring = useSpring(cursorX, springConfig);\r\n//   const cursorYSpring = useSpring(cursorY, springConfig);\r\n\r\n\r\n//   // const [position, setPosition] = useState({ x: 0, y: 0 });\r\n//   const [clicked, setClicked] = useState(false);\r\n//   const [linkHovered, setLinkHovered] = useState(false);\r\n//   // const [hidden, setHidden] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//       addEventListeners();\r\n//       handleLinkHoverEvents();\r\n//       return () => removeEventListeners();\r\n//   }, []);\r\n\r\n//   const addEventListeners = () => {\r\n//       document.addEventListener(\"mousemove\", onMouseMove);\r\n//     //   document.addEventListener(\"mouseenter\", onMouseEnter);\r\n//     //   document.addEventListener(\"mouseleave\", onMouseLeave);\r\n//       document.addEventListener(\"mousedown\", onMouseDown);\r\n//       document.addEventListener(\"mouseup\", onMouseUp);\r\n//   };\r\n\r\n//   const removeEventListeners = () => {\r\n//       document.removeEventListener(\"mousemove\", onMouseMove);\r\n//     //   document.removeEventListener(\"mouseenter\", onMouseEnter);\r\n//     //   document.removeEventListener(\"mouseleave\", onMouseLeave);\r\n//       document.removeEventListener(\"mousedown\", onMouseDown);\r\n//       document.removeEventListener(\"mouseup\", onMouseUp);\r\n//   };\r\n\r\n//   const onMouseMove = (e) => {\r\n//     cursorX.set(e.clientX-16)\r\n//     cursorY.set(e.clientY-80)\r\n//       // setPosition({ cursorX: e.clientX-15, cursorY: e.clientY-15 });\r\n//   };\r\n\r\n//   const onMouseDown = () => {\r\n//       setClicked(true);\r\n//       console.log(clicked);\r\n//   };\r\n\r\n//   const onMouseUp = () => {\r\n//       setClicked(false);\r\n//       console.log(clicked)\r\n//   };\r\n\r\n// //   const onMouseLeave = () => {\r\n// //       setHidden(true);\r\n// //   };\r\n\r\n// //   const onMouseEnter = () => {\r\n// //       setHidden(false);\r\n// //   };\r\n\r\n//   const handleLinkHoverEvents = () => {\r\n//       document.querySelectorAll(\"button\").forEach((el) => {\r\n//           el.addEventListener(\"mouseover\", () => setLinkHovered(true));\r\n//           el.addEventListener(\"mouseout\", () => setLinkHovered(false));\r\n//       });\r\n//   };\r\n\r\n//   let cursorClasses = [classes.cursor];\r\n\r\n//   if(clicked){\r\n//     // cursorClasses.push(classes.clicked);\r\n//     cursorClasses = [classes.clicked]\r\n//   }\r\n// //   if(hidden){\r\n// //     cursorClasses.push(classes.hidden);\r\n// //   }\r\n//   if(linkHovered){\r\n//     cursorClasses.push(classes.hovered);\r\n//   }\r\n\r\n\r\n//   return (\r\n//     <Auxilliary>\r\n//       <motion.div\r\n//           className={cursorClasses.join(' ')}\r\n//           style={{\r\n//             translateX: cursorXSpring,\r\n//             translateY: cursorYSpring,\r\n//           }}\r\n//           // style={{ left: `${position.x}px`, top: `${position.y}px` }}\r\n//       />\r\n// </Auxilliary>\r\n//   );\r\n  // const cursorX = useMotionValue(-100);\r\n  // const cursorY = useMotionValue(-100);\r\n  // const springConfig = { damping: 25, stiffness: 700 };\r\n  // const cursorXSpring = useSpring(cursorX, springConfig);\r\n  // const cursorYSpring = useSpring(cursorY, springConfig);\r\n\r\n\r\n  const [position, setPosition] = useState({ x: 0, y: 0 });\r\n  const [clicked, setClicked] = useState(false);\r\n  const [linkHovered, setLinkHovered] = useState(false);\r\n  const [scroll, setScroll] = useState({ x: 0, y: 0 });\r\n  const [hidden, setHidden] = useState(false);\r\n\r\n  useEffect(() => {\r\n      addEventListeners();\r\n      handleLinkHoverEvents();\r\n      return () => removeEventListeners();\r\n  }, []);\r\n\r\n  const addEventListeners = () => {\r\n      document.addEventListener(\"mousemove\", onMouseMove);\r\n      document.addEventListener(\"mouseenter\", onMouseEnter);\r\n      document.addEventListener(\"mouseleave\", onMouseLeave);\r\n      document.addEventListener(\"mousedown\", onMouseDown);\r\n      document.addEventListener(\"mouseup\", onMouseUp);\r\n      window.addEventListener(\"scroll\", onScroll);\r\n\r\n  };\r\n\r\n  const removeEventListeners = () => {\r\n      document.removeEventListener(\"mousemove\", onMouseMove);\r\n      document.removeEventListener(\"mouseenter\", onMouseEnter);\r\n      document.removeEventListener(\"mouseleave\", onMouseLeave);\r\n      document.removeEventListener(\"mousedown\", onMouseDown);\r\n      document.removeEventListener(\"mouseup\", onMouseUp);\r\n      window.removeEventListener(\"scroll\", onScroll);\r\n\r\n  };\r\n\r\n  const onScroll = e => {\r\n    console.log(e.originalEvent);\r\n\r\n    setScroll({\r\n      x: e.pageX,\r\n      y: e.pageY\r\n    });\r\n  };\r\n\r\n  const onMouseMove = (e) => {\r\n      setPosition({ x: e.clientX-15, y: e.clientY-15 });\r\n  };\r\n\r\n  const onMouseDown = () => {\r\n      setClicked(true);\r\n  };\r\n\r\n  const onMouseUp = () => {\r\n      setClicked(false);\r\n  };\r\n\r\n  const onMouseLeave = () => {\r\n      setHidden(true);\r\n  };\r\n\r\n  const onMouseEnter = () => {\r\n      setHidden(false);\r\n  };\r\n\r\n  const handleLinkHoverEvents = () => {\r\n      document.querySelectorAll(\"button\").forEach((el) => {\r\n          el.addEventListener(\"mouseover\", () => setLinkHovered(true));\r\n          el.addEventListener(\"mouseout\", () => setLinkHovered(false));\r\n      });\r\n      document.querySelectorAll(\"a\").forEach((el) => {\r\n          el.addEventListener(\"mouseover\", () => setLinkHovered(true));\r\n          el.addEventListener(\"mouseout\", () => setLinkHovered(false));\r\n      });\r\n  };\r\n\r\n  let cursorClasses = [classes.cursor];\r\n\r\n  if(clicked){\r\n    cursorClasses.push(classes.clicked);\r\n  }\r\n  if(hidden){\r\n    cursorClasses.push(classes.hidden);\r\n  }\r\n  if(linkHovered){\r\n    cursorClasses.push(classes.hovered);\r\n  }\r\n\r\n\r\n  return (\r\n    <Auxilliary>\r\n      <div\r\n          className={cursorClasses.join(' ')}\r\n          style={{ left: `${position.x}px`, top: `${position.y}px` }}\r\n      />\r\n</Auxilliary>\r\n  );\r\n}\r\n\r\nexport default Cursor;"]},"metadata":{},"sourceType":"module"}