{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITCoursesProjects\\\\React\\\\PokeBuilder\\\\poke-builder\\\\src\\\\components\\\\Poke\\\\BuildControls\\\\BuildControls.js\";\nimport React from 'react';\nimport classes from './BuildControls.module.css';\nimport BuildControl from './BuildControl/BuildControl';\nimport { checkPropTypes } from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst controls = {\n  base: {\n    value: '',\n    ingredients: [{\n      label: 'Quinoa',\n      type: 'quinoa'\n    }, {\n      label: 'White Rice',\n      type: 'whiterice'\n    }, {\n      label: 'Brown Rice',\n      type: 'brownrice'\n    }]\n  },\n  proteins: [{\n    label: 'Prawn',\n    type: 'prawn'\n  }, {\n    label: 'Egg',\n    type: 'egg'\n  }],\n  toppings: [{\n    label: 'Lettuce',\n    type: 'lettuce'\n  }]\n};\n\nconst selectionChangedHandler = (event, props) => {\n  controls.base.value = event.target.value;\n  let resetIngNames = [];\n  controls.base.ingredients.forEach(ing => {\n    if (ing.type !== controls.base.value) {\n      resetIngNames.push(ing.type);\n    }\n  });\n  props.ingredientsReset(resetIngNames);\n  props.ingredientAdded(controls.base.value);\n};\n\nconst buildControls = props => {\n  let transformedControls = [];\n  transformedControls.push( /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Choose the \", props.category]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 30\n  }, this));\n\n  if (props.category === 'base') {\n    transformedControls.push( /*#__PURE__*/_jsxDEV(\"select\", {\n      value: controls.base.value,\n      onChange: event => selectionChangedHandler(event, props),\n      children: controls['base'].ingredients.map(base => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: base.type,\n        children: base.label\n      }, base.type, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this));\n  } else {\n    controls[props.category].forEach(ctrl => {\n      transformedControls.push( /*#__PURE__*/_jsxDEV(BuildControl, {\n        label: ctrl.label,\n        added: () => props.ingredientAdded(ctrl.type),\n        removed: () => props.ingredientRemoved(ctrl.type),\n        disable: props.disable[ctrl.type],\n        numIngs: props.ings[ctrl.type]\n      }, ctrl.label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this));\n    });\n  } // Object.keys(controls)\n  //     .forEach(category => {\n  //         transformedControls.push(<p>Choose the {category}</p>)\n  //         // console.log(props);\n  //         if (category === 'base') {\n  //             transformedControls.push(\n  //                 <select\n  //                     value={category.value}\n  //                     onChange={(event) => selectionChangedHandler(event, props)}>\n  //                     {controls[category].ingredients.map(base => (\n  //                         <option key={base.type}\n  //                             value={base.type}>\n  //                             {base.label}\n  //                         </option>)\n  //                     )}\n  //                 </select>);\n  //         }\n  //         else {\n  //             controls[category].forEach(ctrl => {\n  //                 transformedControls.push(\n  //                     <BuildControl\n  //                         key={ctrl.label}\n  //                         label={ctrl.label}\n  //                         added={() => props.ingredientAdded(ctrl.type)}\n  //                         removed={() => props.ingredientRemoved(ctrl.type)}\n  //                         disable={props.disable[ctrl.type]}\n  //                         numIngs={props.ings[ctrl.type]} />\n  //                 );\n  //             });\n  //         }\n  //     });\n\n\n  let leftArrowClasses = [classes.arrow, classes.left];\n  let rightArrowClasses = [classes.arrow, classes.right];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.BuildControls,\n    children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Price: \", props.totalPrice.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this), transformedControls, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.actionButton,\n          disabled: !props.purchasable,\n          onClick: props.ordered,\n          children: props.isAuth ? \"Order Now\" : \"Sign In to Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        className: leftArrowClasses.join(' '),\n        onClick: props.goUp,\n        disabled: props.goUpDisable\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        className: rightArrowClasses.join(' '),\n        onClick: props.goDown,\n        disabled: props.goDownDisable\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 13\n  }, this);\n};\n\n{\n  /* <div className={classes.BuildControls}>\r\n             <p>Total Price: {props.totalPrice.toFixed(2)}</p> */\n}\n{\n  /* {controls.map(ctrl => {\r\n             <BuildControl\r\n                 key={ctrl.label}\r\n                 label={ctrl.label}\r\n                 added={() => props.ingredientAdded(ctrl.type)}\r\n                 removed={() => props.ingredientRemoved(ctrl.type)}\r\n                 disable={props.disable[ctrl.type]} />\r\n         }\r\n  \n         )} */\n}\n{\n  /* <button\r\n                 className={classes.OrderButton}\r\n                 disabled={!props.purchasable}\r\n                 onClick={props.ordered}>\r\n                 {props.isAuth ? \"Order Now\" : \"Sign In to Order\"}</button>\r\n         </div> */\n}\nexport default buildControls;","map":{"version":3,"sources":["D:/ITCoursesProjects/React/PokeBuilder/poke-builder/src/components/Poke/BuildControls/BuildControls.js"],"names":["React","classes","BuildControl","checkPropTypes","controls","base","value","ingredients","label","type","proteins","toppings","selectionChangedHandler","event","props","target","resetIngNames","forEach","ing","push","ingredientsReset","ingredientAdded","buildControls","transformedControls","category","map","ctrl","ingredientRemoved","disable","ings","leftArrowClasses","arrow","left","rightArrowClasses","right","BuildControls","totalPrice","toFixed","actionButton","purchasable","ordered","isAuth","join","goUp","goUpDisable","goDown","goDownDisable"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\nimport { checkPropTypes } from 'prop-types';\r\n\r\nconst controls = {\r\n    base: {\r\n        value: '',\r\n        ingredients: [\r\n            { label: 'Quinoa', type: 'quinoa' },\r\n            { label: 'White Rice', type: 'whiterice' },\r\n            { label: 'Brown Rice', type: 'brownrice' },],\r\n    },\r\n    proteins: [\r\n        { label: 'Prawn', type: 'prawn' },\r\n        { label: 'Egg', type: 'egg' },],\r\n    toppings: [\r\n        { label: 'Lettuce', type: 'lettuce' },],\r\n\r\n};\r\n\r\n\r\nconst selectionChangedHandler = (event, props) => {\r\n    controls.base.value = event.target.value;\r\n    let resetIngNames = []\r\n    controls.base.ingredients.forEach(ing => {\r\n        if (ing.type !== controls.base.value) {\r\n            resetIngNames.push(ing.type);\r\n        }\r\n    });\r\n    props.ingredientsReset(resetIngNames);\r\n    props.ingredientAdded(controls.base.value);\r\n}\r\n\r\n\r\n\r\nconst buildControls = (props) => {\r\n    let transformedControls = [];\r\n    transformedControls.push(<p>Choose the {props.category}</p>)\r\n    if (props.category === 'base') {\r\n        transformedControls.push(\r\n            <select\r\n                value={controls.base.value}\r\n                onChange={(event) => selectionChangedHandler(event, props)}>\r\n                {controls['base'].ingredients.map(base => (\r\n                    <option key={base.type}\r\n                        value={base.type}>\r\n                        {base.label}\r\n                    </option>)\r\n                )}\r\n            </select>);\r\n    }\r\n    else {\r\n        controls[props.category].forEach(ctrl => {\r\n            transformedControls.push(\r\n                <BuildControl\r\n                    key={ctrl.label}\r\n                    label={ctrl.label}\r\n                    added={() => props.ingredientAdded(ctrl.type)}\r\n                    removed={() => props.ingredientRemoved(ctrl.type)}\r\n                    disable={props.disable[ctrl.type]}\r\n                    numIngs={props.ings[ctrl.type]} />\r\n            );\r\n        });\r\n    }\r\n\r\n\r\n\r\n    // Object.keys(controls)\r\n    //     .forEach(category => {\r\n    //         transformedControls.push(<p>Choose the {category}</p>)\r\n    //         // console.log(props);\r\n    //         if (category === 'base') {\r\n    //             transformedControls.push(\r\n    //                 <select\r\n    //                     value={category.value}\r\n    //                     onChange={(event) => selectionChangedHandler(event, props)}>\r\n    //                     {controls[category].ingredients.map(base => (\r\n    //                         <option key={base.type}\r\n    //                             value={base.type}>\r\n    //                             {base.label}\r\n    //                         </option>)\r\n    //                     )}\r\n    //                 </select>);\r\n    //         }\r\n    //         else {\r\n    //             controls[category].forEach(ctrl => {\r\n    //                 transformedControls.push(\r\n    //                     <BuildControl\r\n    //                         key={ctrl.label}\r\n    //                         label={ctrl.label}\r\n    //                         added={() => props.ingredientAdded(ctrl.type)}\r\n    //                         removed={() => props.ingredientRemoved(ctrl.type)}\r\n    //                         disable={props.disable[ctrl.type]}\r\n    //                         numIngs={props.ings[ctrl.type]} />\r\n    //                 );\r\n    //             });\r\n    //         }\r\n\r\n    //     });\r\n    let leftArrowClasses = [classes.arrow, classes.left];\r\n    let rightArrowClasses = [classes.arrow, classes.right];\r\n\r\n    return (<div className={classes.BuildControls}>\r\n        <fieldset>\r\n            <p>Total Price: {props.totalPrice.toFixed(2)}</p>\r\n            {transformedControls}\r\n\r\n            {/* <input type=\"button\" name=\"next\" className={classes.actionButton} value=\"Next\" /> */}\r\n            <div>\r\n                <button\r\n                    className={classes.actionButton}\r\n                    disabled={!props.purchasable}\r\n                    onClick={props.ordered}>\r\n                    {props.isAuth ? \"Order Now\" : \"Sign In to Order\"}\r\n                </button>\r\n            </div>\r\n            <a href=\"#\" className={leftArrowClasses.join(' ')} onClick={props.goUp} disabled={props.goUpDisable}></a>\r\n            <a href=\"#\" className={rightArrowClasses.join(' ')} onClick={props.goDown} disabled={props.goDownDisable}></a>\r\n        </fieldset>\r\n    </div>)\r\n\r\n}\r\n{/* <div className={classes.BuildControls}>\r\n            <p>Total Price: {props.totalPrice.toFixed(2)}</p> */}\r\n\r\n\r\n\r\n\r\n{/* {controls.map(ctrl => {\r\n            <BuildControl\r\n                key={ctrl.label}\r\n                label={ctrl.label}\r\n                added={() => props.ingredientAdded(ctrl.type)}\r\n                removed={() => props.ingredientRemoved(ctrl.type)}\r\n                disable={props.disable[ctrl.type]} />\r\n        }\r\n\r\n        )} */}\r\n{/* <button\r\n                className={classes.OrderButton}\r\n                disabled={!props.purchasable}\r\n                onClick={props.ordered}>\r\n                {props.isAuth ? \"Order Now\" : \"Sign In to Order\"}</button>\r\n        </div> */}\r\n\r\n\r\nexport default buildControls;"]},"metadata":{},"sourceType":"module"}