{"ast":null,"code":"import _defineProperty from\"D:/ITCoursesProjects/React/PokeBuilder/poke-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:/ITCoursesProjects/React/PokeBuilder/poke-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:/ITCoursesProjects/React/PokeBuilder/poke-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"D:/ITCoursesProjects/React/PokeBuilder/poke-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"D:/ITCoursesProjects/React/PokeBuilder/poke-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"D:/ITCoursesProjects/React/PokeBuilder/poke-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import Input from'../../components/UI/Input/Input';import Button from'../../components/UI/Button/Button';import classes from'./Auth.module.css';import*as actions from'../../store/actions/index';import{connect}from'react-redux';import Spinner from'../../components/UI/Spinner/Spinner';import{Redirect}from'react-router-dom';import{checkValidity}from'../../shared/utility';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Auth=/*#__PURE__*/function(_Component){_inherits(Auth,_Component);var _super=_createSuper(Auth);function Auth(){var _this;_classCallCheck(this,Auth);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={controls:{email:{elementType:'input',elementConfig:{type:'email',placeholder:'Email'},value:'',validation:{required:true,isEmail:true},validity:false,touched:false},password:{elementType:'input',elementConfig:{type:'password',placeholder:'Password'},value:'',validation:{required:true,minLength:6},validity:false,touched:false}},isSignUp:true};_this.inputChangedHandler=function(event,controlName){var updatedControls=_objectSpread(_objectSpread({},_this.state.controls),{},_defineProperty({},controlName,_objectSpread(_objectSpread({},_this.state.controls[controlName]),{},{value:event.target.value,validity:checkValidity(event.target.value,_this.state.controls[controlName].validation),touched:true})));_this.setState({controls:updatedControls});};_this.submitHandler=function(event){event.preventDefault();_this.props.onAuth(_this.state.controls.email.value,_this.state.controls.password.value,_this.state.isSignUp);};_this.switchAuthModeHandler=function(){_this.setState(function(prevState){return{isSignUp:!prevState.isSignUp};});};return _this;}_createClass(Auth,[{key:\"componentDidMount\",value:function componentDidMount(){if(!this.props.buildingPoke&&this.props.authRedirectPath!=='/'){this.props.onSetAuthRedirectPath();}}},{key:\"render\",value:function render(){var _this2=this;var formElementsArray=[];for(var key in this.state.controls){formElementsArray.push({id:key,config:this.state.controls[key]});}var form=formElementsArray.map(function(formElement){return/*#__PURE__*/_jsx(Input,{elementType:formElement.config.elementType,elementConfig:formElement.config.elementConfig,value:formElement.config.value,valid:formElement.config.validity,touched:formElement.config.touched,changed:function changed(event){return _this2.inputChangedHandler(event,formElement.id);}},formElement.id);});if(this.props.loading){form=/*#__PURE__*/_jsx(Spinner,{});}var errorMessage=null;if(this.props.error){errorMessage=/*#__PURE__*/_jsx(\"p\",{children:this.props.error.message});}var authRedirect=null;if(this.props.isAuthenticated){authRedirect=/*#__PURE__*/_jsx(Redirect,{to:this.props.authRedirectPath});}return/*#__PURE__*/_jsxs(\"div\",{className:classes.Auth,children:[authRedirect,errorMessage,/*#__PURE__*/_jsxs(\"form\",{onSubmit:this.submitHandler,children:[form,/*#__PURE__*/_jsx(Button,{btnType:\"Success\",children:\"Submit\"})]}),/*#__PURE__*/_jsxs(Button,{clicked:this.switchAuthModeHandler,btnType:\"Danger\",children:[\"Switch to \",this.state.isSignUp?\"Sign In\":\"Sign Up\"]})]});}}]);return Auth;}(Component);var mapStateToProps=function mapStateToProps(state){return{loading:state.auth.loading,error:state.auth.error,isAuthenticated:state.auth.token!==null,buildingPoke:state.pokeBuilder.building,authRedirectPath:state.auth.authRedirectPath};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onAuth:function onAuth(email,password,isSignUp){return dispatch(actions.auth(email,password,isSignUp));},onSetAuthRedirectPath:function onSetAuthRedirectPath(){return dispatch(actions.setAuthRedirectPath('/'));}};};export default connect(mapStateToProps,mapDispatchToProps)(Auth);","map":{"version":3,"sources":["D:/ITCoursesProjects/React/PokeBuilder/poke-builder/src/containers/Auth/Auth.js"],"names":["React","Component","Input","Button","classes","actions","connect","Spinner","Redirect","checkValidity","Auth","state","controls","email","elementType","elementConfig","type","placeholder","value","validation","required","isEmail","validity","touched","password","minLength","isSignUp","inputChangedHandler","event","controlName","updatedControls","target","setState","submitHandler","preventDefault","props","onAuth","switchAuthModeHandler","prevState","buildingPoke","authRedirectPath","onSetAuthRedirectPath","formElementsArray","key","push","id","config","form","map","formElement","loading","errorMessage","error","message","authRedirect","isAuthenticated","mapStateToProps","auth","token","pokeBuilder","building","mapDispatchToProps","dispatch","setAuthRedirectPath"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport classes from './Auth.module.css';\r\nimport * as actions from '../../store/actions/index';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {checkValidity} from '../../shared/utility';\r\n\r\nclass Auth extends Component {\r\n\r\n    state = {\r\n        controls: {\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Email'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                validity: false,\r\n                touched: false\r\n            },\r\n            password: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'password',\r\n                    placeholder: 'Password'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                },\r\n                validity: false,\r\n                touched: false\r\n            },\r\n        },\r\n        isSignUp: true\r\n    }\r\n\r\n    inputChangedHandler = (event, controlName) => {\r\n        const updatedControls = {\r\n            ...this.state.controls,\r\n            [controlName]: {\r\n                ...this.state.controls[controlName],\r\n                value: event.target.value,\r\n                validity: checkValidity(event.target.value, this.state.controls[controlName].validation),\r\n                touched: true\r\n            }\r\n        };\r\n        this.setState({ controls: updatedControls });\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();        \r\n        this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignUp);\r\n    }\r\n\r\n    switchAuthModeHandler =()=>{\r\n        this.setState(prevState => {\r\n            return{\r\n                isSignUp:!prevState.isSignUp\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount(){\r\n        if (! this.props.buildingPoke && this.props.authRedirectPath !=='/'){\r\n            this.props.onSetAuthRedirectPath();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const formElementsArray = [];\r\n        for (let key in this.state.controls) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.controls[key]\r\n            });\r\n        }\r\n\r\n        let form = formElementsArray.map(formElement => (\r\n            <Input\r\n                key={formElement.id}\r\n                elementType={formElement.config.elementType}\r\n                elementConfig={formElement.config.elementConfig}\r\n                value={formElement.config.value}\r\n                valid={formElement.config.validity}\r\n                touched={formElement.config.touched}\r\n                changed={(event) => this.inputChangedHandler(event, formElement.id)}/>\r\n        ));\r\n\r\n        if(this.props.loading){\r\n            form=<Spinner/>\r\n        }\r\n\r\n        let errorMessage  = null;\r\n\r\n        if(this.props.error){\r\n            errorMessage=(\r\n                <p>{this.props.error.message}</p>\r\n            );\r\n        }\r\n        let authRedirect = null;\r\n        if(this.props.isAuthenticated){\r\n            authRedirect = <Redirect to={this.props.authRedirectPath}/>\r\n        }\r\n        return (\r\n            <div className={classes.Auth}>\r\n                {authRedirect}\r\n                {errorMessage}\r\n                <form onSubmit={this.submitHandler}>\r\n                    {form}\r\n                    <Button btnType=\"Success\">Submit</Button>\r\n                </form>\r\n                <Button \r\n                clicked = {this.switchAuthModeHandler}\r\n                btnType = \"Danger\">Switch to {this.state.isSignUp? \"Sign In\" : \"Sign Up\"}</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        loading: state.auth.loading,\r\n        error: state.auth.error,\r\n        isAuthenticated: state.auth.token !== null,\r\n        buildingPoke: state.pokeBuilder.building,\r\n        authRedirectPath: state.auth.authRedirectPath\r\n    }\r\n}\r\n\r\n \r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (email, password, isSignUp) => dispatch(actions.auth(email, password,isSignUp)),\r\n        onSetAuthRedirectPath:() => dispatch(actions.setAuthRedirectPath('/'))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);"]},"metadata":{},"sourceType":"module"}