{"ast":null,"code":"export var checkValidity=function checkValidity(value,rules){var isValid=true;if(!rules){return true;}if(rules.required){isValid=value.trim()!==''&&isValid;}if(rules.minLength){isValid=value.length>=rules.minLength&&isValid;}if(rules.maxLength){isValid=value.length<=rules.maxLength&&isValid;}if(rules.isEmail){var pattern=/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;isValid=pattern.test(value)&&isValid;}if(rules.isNumeric){var _pattern=/^\\d+$/;isValid=_pattern.test(value)&&isValid;}return isValid;};","map":{"version":3,"sources":["D:/ITCoursesProjects/React/PokeBuilder/poke-builder/src/shared/utility.js"],"names":["checkValidity","value","rules","isValid","required","trim","minLength","length","maxLength","isEmail","pattern","test","isNumeric"],"mappings":"AAAA,MAAO,IAAMA,CAAAA,aAAa,CAAE,QAAfA,CAAAA,aAAe,CAACC,KAAD,CAAQC,KAAR,CAAiB,CACzC,GAAIC,CAAAA,OAAO,CAAG,IAAd,CACA,GAAI,CAACD,KAAL,CAAY,CACR,MAAO,KAAP,CACH,CAED,GAAIA,KAAK,CAACE,QAAV,CAAoB,CAChBD,OAAO,CAAGF,KAAK,CAACI,IAAN,KAAiB,EAAjB,EAAuBF,OAAjC,CACH,CAED,GAAID,KAAK,CAACI,SAAV,CAAqB,CACjBH,OAAO,CAAGF,KAAK,CAACM,MAAN,EAAgBL,KAAK,CAACI,SAAtB,EAAmCH,OAA7C,CACH,CAED,GAAID,KAAK,CAACM,SAAV,CAAqB,CACjBL,OAAO,CAAGF,KAAK,CAACM,MAAN,EAAgBL,KAAK,CAACM,SAAtB,EAAmCL,OAA7C,CACH,CAED,GAAID,KAAK,CAACO,OAAV,CAAmB,CACf,GAAMC,CAAAA,OAAO,CAAG,uIAAhB,CACAP,OAAO,CAAGO,OAAO,CAACC,IAAR,CAAaV,KAAb,GAAuBE,OAAjC,CACH,CAED,GAAID,KAAK,CAACU,SAAV,CAAqB,CACjB,GAAMF,CAAAA,QAAO,CAAG,OAAhB,CACAP,OAAO,CAAGO,QAAO,CAACC,IAAR,CAAaV,KAAb,GAAuBE,OAAjC,CACH,CAED,MAAOA,CAAAA,OAAP,CACH,CA7BM","sourcesContent":["export const checkValidity =(value, rules)=> {\r\n    let isValid = true;\r\n    if (!rules) {\r\n        return true;\r\n    }\r\n\r\n    if (rules.required) {\r\n        isValid = value.trim() !== '' && isValid;\r\n    }\r\n\r\n    if (rules.minLength) {\r\n        isValid = value.length >= rules.minLength && isValid\r\n    }\r\n\r\n    if (rules.maxLength) {\r\n        isValid = value.length <= rules.maxLength && isValid\r\n    }\r\n\r\n    if (rules.isEmail) {\r\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n        isValid = pattern.test(value) && isValid\r\n    }\r\n\r\n    if (rules.isNumeric) {\r\n        const pattern = /^\\d+$/;\r\n        isValid = pattern.test(value) && isValid\r\n    }\r\n\r\n    return isValid;\r\n}"]},"metadata":{},"sourceType":"module"}