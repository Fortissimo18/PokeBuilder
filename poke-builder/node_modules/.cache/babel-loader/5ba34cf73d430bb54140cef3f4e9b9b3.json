{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITCoursesProjects\\\\React\\\\PokeBuilder\\\\poke-builder\\\\src\\\\containers\\\\PokeBuilder\\\\PokeBuilder.js\";\nimport React, { Component } from 'react';\nimport Auxilliary from '../../hoc/Auxilliary';\nimport Poke from '../../components/Poke/Poke';\nimport BuildControls from '../../components/Poke/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Poke/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/index';\nimport classes from './PokeBuilder.module.css';\nimport Carousel from '../Carousel/Carousel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PokeBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // purchasable: false,\n      purchasing: false\n    };\n\n    this.purchasingHandler = () => {\n      if (this.props.isAuthenticated) {\n        this.setState({\n          purchasing: true\n        });\n      } else {\n        this.props.onSetAuthRedirectPath('/checkout');\n        this.props.history.push('/auth');\n      }\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      this.props.onInitPurchase();\n      this.props.history.push('/checkout');\n    };\n  }\n\n  // purchaseContinueHandler = () => {\n  //     const queryParams = [];\n  //     for (let i in this.props.ings) {\n  //         queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.props.ings[i]));\n  //     }\n  //     queryParams.push('price=' + this.props.price);\n  //     const queryString = queryParams.join('&');\n  //     this.props.history.push(\n  //         {\n  //             pathname: '/checkout',\n  //             search: '?' + queryString\n  //         });\n  // }\n  componentDidMount() {\n    this.props.onInitIngredients();\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    return sum > 0;\n  } // addIngredientHandler = (type) => {\n  //     const oldCount = this.props.ings[type];\n  //     const updatedCount = oldCount + 1;\n  //     const updatedIngredients = { ...this.props.ings };\n  //     updatedIngredients[type] = updatedCount;\n  //     const newPrice = this.props.price + INGREDIENT_PRICE[type];\n  //     this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\n  //     this.updatePurchaseState(updatedIngredients);\n  // }\n  // removeIngredientHandler = (type) => {\n  //     const ol dCount = this.props.ings[type];\n  //     const updatedCount = oldCount - 1;\n  //     if (updatedCount < 0) {\n  //         return;\n  //     }\n  //     const updatedIngredients = { ...this.props.ings };\n  //     updatedIngredients[type] = updatedCount;\n  //     const newPrice = this.props.price - INGREDIENT_PRICE[type];\n  //     this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\n  //     this.updatePurchaseState(updatedIngredients);\n  // }\n\n\n  render() {\n    const disableInfo = { ...this.props.ings\n    };\n\n    for (let key in disableInfo) {\n      disableInfo[key] = disableInfo[key] <= 0;\n    } // if (this.state.loading) {\n    //     orderSummary = <Spinner />\n    // }\n\n\n    let orderSummary = null;\n    let poke = this.props.error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Ingredients cannot be loaded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 39\n    }, this) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 77\n    }, this);\n\n    if (this.props.ings) {\n      poke = /*#__PURE__*/_jsxDEV(Auxilliary, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.PokeBuilder,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.left,\n            children: [\" \", /*#__PURE__*/_jsxDEV(Poke, {\n              ingredients: this.props.ings\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 52\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.right,\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: classes.wobbleHorizontal,\n              children: \"Build Your Own Bowl\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Carousel, {\n              isAuth: this.props.isAuthenticated,\n              ingredientAdded: this.props.onIngredientAdded,\n              ingredientRemoved: this.props.onIngredientRemoved,\n              ingredientsReset: this.props.onIngredientsReset,\n              totalPrice: this.props.price,\n              purchasable: this.updatePurchaseState(this.props.ings),\n              ordered: this.purchasingHandler,\n              disable: disableInfo,\n              ings: this.props.ings\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this);\n      orderSummary = /*#__PURE__*/_jsxDEV(OrderSummary, {\n        price: this.props.price.toFixed(2),\n        ingredients: this.props.ings,\n        purchaseCancelled: this.purchaseCancelHandler,\n        purchaseContinued: this.purchaseContinueHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 28\n      }, this);\n    }\n\n    if (this.props.ingredients === null) {\n      orderSummary = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 28\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Auxilliary, {\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        show: this.state.purchasing,\n        modalClosed: this.purchaseCancelHandler,\n        children: orderSummary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), poke]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.pokeBuilder.ingredients,\n    price: state.pokeBuilder.totalPrice,\n    error: state.pokeBuilder.error,\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientAdded: ingName => dispatch(actions.addIngredient(ingName)),\n    onIngredientRemoved: ingName => dispatch(actions.removeIngredient(ingName)),\n    onIngredientsReset: ingNames => dispatch(actions.resetIngredients(ingNames)),\n    onInitIngredients: () => dispatch(actions.initIngredients()),\n    onInitPurchase: () => dispatch(actions.purchaseInit()),\n    onSetAuthRedirectPath: path => dispatch(actions.setAuthRedirectPath(path))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(PokeBuilder, axios));","map":{"version":3,"sources":["D:/ITCoursesProjects/React/PokeBuilder/poke-builder/src/containers/PokeBuilder/PokeBuilder.js"],"names":["React","Component","Auxilliary","Poke","BuildControls","Modal","OrderSummary","axios","Spinner","withErrorHandler","connect","actions","classes","Carousel","PokeBuilder","state","purchasing","purchasingHandler","props","isAuthenticated","setState","onSetAuthRedirectPath","history","push","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","componentDidMount","onInitIngredients","updatePurchaseState","ingredients","sum","Object","keys","map","igKey","reduce","el","render","disableInfo","ings","key","orderSummary","poke","error","left","right","wobbleHorizontal","onIngredientAdded","onIngredientRemoved","onIngredientsReset","price","toFixed","mapStateToProps","pokeBuilder","totalPrice","auth","token","mapDispatchToProps","dispatch","ingName","addIngredient","removeIngredient","ingNames","resetIngredients","initIngredients","purchaseInit","path","setAuthRedirectPath"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Auxilliary from '../../hoc/Auxilliary';\r\nimport Poke from '../../components/Poke/Poke';\r\nimport BuildControls from '../../components/Poke/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Poke/OrderSummary/OrderSummary';\r\nimport axios from '../../axios-orders';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions/index';\r\nimport classes from './PokeBuilder.module.css';\r\nimport Carousel from '../Carousel/Carousel';\r\n\r\nclass PokeBuilder extends Component {\r\n\r\n    state = {\r\n        // purchasable: false,\r\n        purchasing: false,\r\n    };\r\n\r\n    purchasingHandler = () => {\r\n        if (this.props.isAuthenticated) {\r\n            this.setState({ purchasing: true });\r\n        }\r\n        else {\r\n            this.props.onSetAuthRedirectPath('/checkout')\r\n            this.props.history.push('/auth');\r\n        }\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({ purchasing: false });\r\n    }\r\n\r\n    // purchaseContinueHandler = () => {\r\n    //     const queryParams = [];\r\n    //     for (let i in this.props.ings) {\r\n    //         queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.props.ings[i]));\r\n    //     }\r\n    //     queryParams.push('price=' + this.props.price);\r\n    //     const queryString = queryParams.join('&');\r\n    //     this.props.history.push(\r\n    //         {\r\n    //             pathname: '/checkout',\r\n    //             search: '?' + queryString\r\n    //         });\r\n    // }\r\n    componentDidMount() {\r\n        this.props.onInitIngredients();\r\n\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        this.props.onInitPurchase();\r\n        this.props.history.push('/checkout');\r\n    }\r\n\r\n    updatePurchaseState(ingredients) {\r\n        const sum = Object.keys(ingredients)\r\n            .map(igKey => {\r\n                return ingredients[igKey];\r\n            })\r\n            .reduce((sum, el) => {\r\n                return sum + el;\r\n            }, 0);\r\n        return sum > 0\r\n    }\r\n\r\n    // addIngredientHandler = (type) => {\r\n    //     const oldCount = this.props.ings[type];\r\n    //     const updatedCount = oldCount + 1;\r\n    //     const updatedIngredients = { ...this.props.ings };\r\n    //     updatedIngredients[type] = updatedCount;\r\n\r\n    //     const newPrice = this.props.price + INGREDIENT_PRICE[type];\r\n    //     this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\r\n    //     this.updatePurchaseState(updatedIngredients);\r\n\r\n    // }\r\n\r\n    // removeIngredientHandler = (type) => {\r\n    //     const ol dCount = this.props.ings[type];\r\n    //     const updatedCount = oldCount - 1;\r\n    //     if (updatedCount < 0) {\r\n    //         return;\r\n    //     }\r\n\r\n    //     const updatedIngredients = { ...this.props.ings };\r\n    //     updatedIngredients[type] = updatedCount;\r\n\r\n    //     const newPrice = this.props.price - INGREDIENT_PRICE[type];\r\n    //     this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\r\n    //     this.updatePurchaseState(updatedIngredients);\r\n    // }\r\n\r\n\r\n    render() {\r\n        const disableInfo = {\r\n            ...this.props.ings\r\n        };\r\n        for (let key in disableInfo) {\r\n            disableInfo[key] = disableInfo[key] <= 0;\r\n        }\r\n\r\n\r\n        // if (this.state.loading) {\r\n        //     orderSummary = <Spinner />\r\n        // }\r\n        let orderSummary = null;\r\n        let poke = this.props.error ? <p>Ingredients cannot be loaded</p> : <Spinner />;\r\n        if (this.props.ings) {\r\n            poke = (<Auxilliary>\r\n                <div className={classes.PokeBuilder}>\r\n                   \r\n                    <div className={classes.left}> <Poke ingredients={this.props.ings} /></div>\r\n                    <div className={classes.right}> \r\n                    <h1 className={classes.wobbleHorizontal}>Build Your Own Bowl</h1>\r\n                        <Carousel\r\n                            isAuth={this.props.isAuthenticated}\r\n                            ingredientAdded={this.props.onIngredientAdded}\r\n                            ingredientRemoved={this.props.onIngredientRemoved}\r\n                            ingredientsReset={this.props.onIngredientsReset}\r\n                            totalPrice={this.props.price}\r\n                            purchasable={this.updatePurchaseState(this.props.ings)}\r\n                            ordered={this.purchasingHandler}\r\n                            disable={disableInfo}\r\n                            ings={this.props.ings} />\r\n                        {/* <BuildControls\r\n                            isAuth={this.props.isAuthenticated}\r\n                            ingredientAdded={this.props.onIngredientAdded}\r\n                            ingredientRemoved={this.props.onIngredientRemoved}\r\n                            ingredientsReset = {this.props.onIngredientsReset}\r\n                            totalPrice={this.props.price}\r\n                            purchasable={this.updatePurchaseState(this.props.ings)}\r\n                            ordered={this.purchasingHandler}\r\n                            disable={disableInfo}\r\n                            ings = {this.props.ings} \r\n                            category = \"base\"/> */}\r\n                    </div>\r\n                </div>\r\n            </Auxilliary>);\r\n\r\n\r\n            orderSummary = <OrderSummary\r\n                price={this.props.price.toFixed(2)}\r\n                ingredients={this.props.ings}\r\n                purchaseCancelled={this.purchaseCancelHandler}\r\n                purchaseContinued={this.purchaseContinueHandler} />\r\n        }\r\n        if (this.props.ingredients === null) {\r\n            orderSummary = <Spinner></Spinner>\r\n        }\r\n        return (\r\n            <Auxilliary>\r\n                <Modal\r\n                    show={this.state.purchasing}\r\n                    modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {poke}\r\n            </Auxilliary>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.pokeBuilder.ingredients,\r\n        price: state.pokeBuilder.totalPrice,\r\n        error: state.pokeBuilder.error,\r\n        isAuthenticated: state.auth.token !== null\r\n    };\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\r\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\r\n        onIngredientsReset: (ingNames) => dispatch(actions.resetIngredients(ingNames)),\r\n        onInitIngredients: () => dispatch(actions.initIngredients()),\r\n        onInitPurchase: () => dispatch(actions.purchaseInit()),\r\n        onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(PokeBuilder, axios));"]},"metadata":{},"sourceType":"module"}