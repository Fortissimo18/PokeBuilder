{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITCoursesProjects\\\\React\\\\PokeBuilder\\\\poke-builder\\\\src\\\\components\\\\Poke\\\\BuildControls\\\\BuildControls.js\";\nimport React from 'react';\nimport classes from './BuildControls.module.css';\nimport BuildControl from './BuildControl/BuildControl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst controls = {\n  base: {\n    value: '',\n    ingredients: [{\n      label: 'Quinoa',\n      type: 'quinoa'\n    }, {\n      label: 'White Rice',\n      type: 'whiterice'\n    }, {\n      label: 'Brown Rice',\n      type: 'brownrice'\n    }]\n  },\n  proteins: [{\n    label: 'Prawn',\n    type: 'prawn'\n  }, {\n    label: 'Egg',\n    type: 'egg'\n  }],\n  toppings: [{\n    label: 'Lettuce',\n    type: 'lettuce'\n  }]\n};\n\nconst selectionChangedHandler = (event, props) => {\n  controls.base.value = event.target.value;\n  let resetIngNames = [];\n  controls.base.ingredients.forEach(ing => {\n    if (ing.type !== controls.base.value) {\n      resetIngNames.push(ing.type);\n    }\n  });\n  props.ingredientsReset(resetIngNames);\n  props.ingredientAdded(controls.base.value);\n};\n\nconst buildControls = props => {\n  let transformedControls = [];\n  Object.keys(controls).forEach(category => {\n    transformedControls.push( /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Choose the \", category]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 38\n    }, this)); // console.log(props);\n\n    if (category === 'base') {\n      transformedControls.push( /*#__PURE__*/_jsxDEV(\"select\", {\n        value: category.value,\n        onChange: event => selectionChangedHandler(event, props),\n        children: controls[category].ingredients.map(base => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: base.type,\n          children: base.label\n        }, base.type, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this));\n    } else {\n      controls[category].forEach(ctrl => {\n        transformedControls.push( /*#__PURE__*/_jsxDEV(BuildControl, {\n          label: ctrl.label,\n          added: () => props.ingredientAdded(ctrl.type),\n          removed: () => props.ingredientRemoved(ctrl.type),\n          disable: props.disable[ctrl.type],\n          numIngs: props.ings[ctrl.type]\n        }, ctrl.label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this));\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.BuildControls,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Price: \", props.totalPrice.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), transformedControls, /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.OrderButton,\n      disabled: !props.purchasable,\n      onClick: props.ordered,\n      children: props.isAuth ? \"Order Now\" : \"Sign In to Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 13\n  }, this);\n};\n\n{\n  /* <div className={classes.BuildControls}>\r\n             <p>Total Price: {props.totalPrice.toFixed(2)}</p> */\n}\n{\n  /* {controls.map(ctrl => {\r\n             <BuildControl\r\n                 key={ctrl.label}\r\n                 label={ctrl.label}\r\n                 added={() => props.ingredientAdded(ctrl.type)}\r\n                 removed={() => props.ingredientRemoved(ctrl.type)}\r\n                 disable={props.disable[ctrl.type]} />\r\n         }\r\n  \n         )} */\n}\n{\n  /* <button\r\n                 className={classes.OrderButton}\r\n                 disabled={!props.purchasable}\r\n                 onClick={props.ordered}>\r\n                 {props.isAuth ? \"Order Now\" : \"Sign In to Order\"}</button>\r\n         </div> */\n}\nexport default buildControls;","map":{"version":3,"sources":["D:/ITCoursesProjects/React/PokeBuilder/poke-builder/src/components/Poke/BuildControls/BuildControls.js"],"names":["React","classes","BuildControl","controls","base","value","ingredients","label","type","proteins","toppings","selectionChangedHandler","event","props","target","resetIngNames","forEach","ing","push","ingredientsReset","ingredientAdded","buildControls","transformedControls","Object","keys","category","map","ctrl","ingredientRemoved","disable","ings","BuildControls","totalPrice","toFixed","OrderButton","purchasable","ordered","isAuth"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls = {\r\n    base: {\r\n        value: '',\r\n        ingredients: [\r\n            { label: 'Quinoa', type: 'quinoa' },\r\n            { label: 'White Rice', type: 'whiterice' },\r\n            { label: 'Brown Rice', type: 'brownrice' },],\r\n    },\r\n    proteins: [\r\n        { label: 'Prawn', type: 'prawn' },\r\n        { label: 'Egg', type: 'egg' },],\r\n    toppings: [\r\n        { label: 'Lettuce', type: 'lettuce' },],\r\n\r\n};\r\n\r\n\r\nconst selectionChangedHandler = (event, props) => {\r\n    controls.base.value = event.target.value;\r\n    let resetIngNames = []\r\n    controls.base.ingredients.forEach(ing =>{if(ing.type !== controls.base.value){\r\n        resetIngNames.push(ing.type);\r\n    }});\r\n    props.ingredientsReset(resetIngNames);\r\n    props.ingredientAdded(controls.base.value);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst buildControls = (props) => {\r\n    let transformedControls = [];\r\n    Object.keys(controls)\r\n        .forEach(category => {\r\n            transformedControls.push(<p>Choose the {category}</p>)\r\n            // console.log(props);\r\n            if (category === 'base') {\r\n                transformedControls.push(\r\n                    <select\r\n                        value={category.value}\r\n                        onChange={(event) => selectionChangedHandler(event, props)}>\r\n                        {controls[category].ingredients.map(base => (\r\n                            <option key={base.type}\r\n                                value={base.type}>\r\n                                {base.label}\r\n                            </option>)\r\n\r\n                        )}\r\n                    </select>);\r\n            }\r\n            else {\r\n                controls[category].forEach(ctrl => {\r\n                    transformedControls.push(\r\n                        <BuildControl\r\n                            key={ctrl.label}\r\n                            label={ctrl.label}\r\n                            added={() => props.ingredientAdded(ctrl.type)}\r\n                            removed={() => props.ingredientRemoved(ctrl.type)}\r\n                            disable={props.disable[ctrl.type]}\r\n                            numIngs={props.ings[ctrl.type]} />\r\n                    );\r\n                });\r\n            }\r\n\r\n        });\r\n\r\n\r\n    return (<div className={classes.BuildControls}>\r\n        <p>Total Price: {props.totalPrice.toFixed(2)}</p>\r\n        {transformedControls}\r\n        <button\r\n            className={classes.OrderButton}\r\n            disabled={!props.purchasable}\r\n            onClick={props.ordered}>\r\n            {props.isAuth ? \"Order Now\" : \"Sign In to Order\"}</button>\r\n    </div>)\r\n\r\n}\r\n{/* <div className={classes.BuildControls}>\r\n            <p>Total Price: {props.totalPrice.toFixed(2)}</p> */}\r\n\r\n\r\n\r\n\r\n{/* {controls.map(ctrl => {\r\n            <BuildControl\r\n                key={ctrl.label}\r\n                label={ctrl.label}\r\n                added={() => props.ingredientAdded(ctrl.type)}\r\n                removed={() => props.ingredientRemoved(ctrl.type)}\r\n                disable={props.disable[ctrl.type]} />\r\n        }\r\n\r\n        )} */}\r\n{/* <button\r\n                className={classes.OrderButton}\r\n                disabled={!props.purchasable}\r\n                onClick={props.ordered}>\r\n                {props.isAuth ? \"Order Now\" : \"Sign In to Order\"}</button>\r\n        </div> */}\r\n\r\n\r\nexport default buildControls;"]},"metadata":{},"sourceType":"module"}