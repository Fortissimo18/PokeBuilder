{"ast":null,"code":"export const checkValidity = (value, rules) => {\n  let errorMessage = [];\n  let isValid = true;\n  console.log(value);\n  console.log(rules);\n\n  if (!rules) {\n    return true;\n  }\n\n  if (rules.required) {\n    isValid = value.trim() !== '';\n\n    if (!isValid) {\n      errorMessage.push('Please fill in this field');\n    }\n  }\n\n  if (rules.minLength) {\n    if (!(value.length >= rules.minLength)) {\n      isValid = false;\n      errorMessage.push('Must be at least ' + rules.minLength + ' digits');\n    }\n  }\n\n  if (rules.maxLength) {\n    if (!(value.length <= rules.maxLength)) {\n      isValid = false;\n      errorMessage.push('Must be no more than ' + rules.minLength + ' digits');\n    }\n  }\n\n  if (rules.isEmail) {\n    const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n\n    if (!pattern.test(value)) {\n      isValid = false;\n      errorMessage.push('Please enter a valid email');\n    }\n  }\n\n  if (rules.isNumeric) {\n    const pattern = /^\\d+$/;\n\n    if (!pattern.test(value)) {\n      isValid = false;\n      errorMessage.push('Please enter a valid number');\n    }\n  }\n\n  return {\n    validity: isValid,\n    errorMessage: errorMessage\n  };\n};","map":{"version":3,"sources":["D:/ITCoursesProjects/React/PokeBuilder/poke-builder/src/shared/utility.js"],"names":["checkValidity","value","rules","errorMessage","isValid","console","log","required","trim","push","minLength","length","maxLength","isEmail","pattern","test","isNumeric","validity"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC3C,MAAIC,YAAY,GAAG,EAAnB;AACA,MAAIC,OAAO,GAAG,IAAd;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;;AACA,MAAI,CAACA,KAAL,EAAY;AACR,WAAO,IAAP;AACH;;AAED,MAAIA,KAAK,CAACK,QAAV,EAAoB;AAChBH,IAAAA,OAAO,GAAGH,KAAK,CAACO,IAAN,OAAiB,EAA3B;;AACA,QAAI,CAACJ,OAAL,EAAc;AACVD,MAAAA,YAAY,CAACM,IAAb,CAAkB,2BAAlB;AACH;AACJ;;AAED,MAAIP,KAAK,CAACQ,SAAV,EAAqB;AACjB,QAAI,EAAET,KAAK,CAACU,MAAN,IAAgBT,KAAK,CAACQ,SAAxB,CAAJ,EAAwC;AACpCN,MAAAA,OAAO,GAAG,KAAV;AACAD,MAAAA,YAAY,CAACM,IAAb,CAAkB,sBAAsBP,KAAK,CAACQ,SAA5B,GAAwC,SAA1D;AACH;AAEJ;;AAED,MAAIR,KAAK,CAACU,SAAV,EAAqB;AACjB,QAAI,EAAEX,KAAK,CAACU,MAAN,IAAgBT,KAAK,CAACU,SAAxB,CAAJ,EAAwC;AACpCR,MAAAA,OAAO,GAAG,KAAV;AACAD,MAAAA,YAAY,CAACM,IAAb,CAAkB,0BAA0BP,KAAK,CAACQ,SAAhC,GAA4C,SAA9D;AACH;AACJ;;AAED,MAAIR,KAAK,CAACW,OAAV,EAAmB;AACf,UAAMC,OAAO,GAAG,uIAAhB;;AACA,QAAI,CAACA,OAAO,CAACC,IAAR,CAAad,KAAb,CAAL,EAA0B;AACtBG,MAAAA,OAAO,GAAG,KAAV;AACAD,MAAAA,YAAY,CAACM,IAAb,CAAkB,4BAAlB;AACH;AACJ;;AAED,MAAIP,KAAK,CAACc,SAAV,EAAqB;AACjB,UAAMF,OAAO,GAAG,OAAhB;;AACA,QAAI,CAACA,OAAO,CAACC,IAAR,CAAad,KAAb,CAAL,EAA0B;AACtBG,MAAAA,OAAO,GAAG,KAAV;AACAD,MAAAA,YAAY,CAACM,IAAb,CAAkB,6BAAlB;AACH;AACJ;;AACD,SAAO;AAAEQ,IAAAA,QAAQ,EAAEb,OAAZ;AAAqBD,IAAAA,YAAY,EAAEA;AAAnC,GAAP;AACH,CA/CM","sourcesContent":["export const checkValidity = (value, rules) => {\r\n    let errorMessage = [];\r\n    let isValid = true;\r\n    console.log(value)\r\n    console.log(rules)\r\n    if (!rules) {\r\n        return true;\r\n    }\r\n\r\n    if (rules.required) {\r\n        isValid = value.trim() !== '';\r\n        if (!isValid) {\r\n            errorMessage.push('Please fill in this field')\r\n        }\r\n    }\r\n\r\n    if (rules.minLength) {\r\n        if (!(value.length >= rules.minLength)) {\r\n            isValid = false;\r\n            errorMessage.push('Must be at least ' + rules.minLength + ' digits')\r\n        }\r\n\r\n    }\r\n\r\n    if (rules.maxLength) {\r\n        if (!(value.length <= rules.maxLength)) {\r\n            isValid = false;\r\n            errorMessage.push('Must be no more than ' + rules.minLength + ' digits')\r\n        }\r\n    }\r\n\r\n    if (rules.isEmail) {\r\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n        if (!pattern.test(value)) {\r\n            isValid = false;\r\n            errorMessage.push('Please enter a valid email');\r\n        }\r\n    }\r\n\r\n    if (rules.isNumeric) {\r\n        const pattern = /^\\d+$/;\r\n        if (!pattern.test(value)) {\r\n            isValid = false;\r\n            errorMessage.push('Please enter a valid number');\r\n        }\r\n    }\r\n    return { validity: isValid, errorMessage: errorMessage };\r\n}"]},"metadata":{},"sourceType":"module"}