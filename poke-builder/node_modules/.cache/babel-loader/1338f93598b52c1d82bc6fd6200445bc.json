{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from 'axios';\nconst API_KEY = 'AIzaSyCluRXdmpTGmLP9XBUBi9gaRgrhVZKTH-0';\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = (token, userId) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    idToken: token,\n    userId: userId\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const auth = (email, password, isSignup) => {\n  return dispatch => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    };\n    let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=' + API_KEY;\n\n    if (!isSignup) {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=' + API_KEY;\n    }\n\n    ;\n    console.log(isSignup);\n    axios.post(url, authData).then(response => {\n      dispatch(authSuccess(response.data.idToken, response.data.localId));\n    }).catch(error => {\n      dispatch(authFail(error.response.data.error));\n    });\n  };\n};","map":{"version":3,"sources":["D:/ITCoursesProjects/React/PokeBuilder/poke-builder/src/store/actions/auth.js"],"names":["actionTypes","axios","API_KEY","authStart","type","AUTH_START","authSuccess","token","userId","AUTH_SUCCESS","idToken","authFail","error","AUTH_FAIL","auth","email","password","isSignup","dispatch","authData","returnSecureToken","url","console","log","post","then","response","data","localId","catch"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,yCAAhB;AACA,OAAO,MAAMC,SAAS,GAAE,MAAI;AACxB,SAAO;AACHC,IAAAA,IAAI,EAAEJ,WAAW,CAACK;AADf,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,WAAW,GAAE,CAACC,KAAD,EAAQC,MAAR,KAAiB;AACvC,SAAO;AACHJ,IAAAA,IAAI,EAAEJ,WAAW,CAACS,YADf;AAEHC,IAAAA,OAAO,EAAEH,KAFN;AAGHC,IAAAA,MAAM,EAAEA;AAHL,GAAP;AAKH,CANM;AAQP,OAAO,MAAMG,QAAQ,GAAGC,KAAD,IAAS;AAC5B,SAAO;AACHR,IAAAA,IAAI,EAAEJ,WAAW,CAACa,SADf;AAEHD,IAAAA,KAAK,EAACA;AAFH,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,IAAI,GAAG,CAACC,KAAD,EAAQC,QAAR,EAAkBC,QAAlB,KAA8B;AAC9C,SAAOC,QAAQ,IAAE;AACbA,IAAAA,QAAQ,CAACf,SAAS,EAAV,CAAR;AACA,UAAMgB,QAAQ,GAAG;AACbJ,MAAAA,KAAK,EAAEA,KADM;AAEbC,MAAAA,QAAQ,EAAEA,QAFG;AAGbI,MAAAA,iBAAiB,EAAE;AAHN,KAAjB;AAOA,QAAIC,GAAG,GAAG,mEAAiEnB,OAA3E;;AAEA,QAAG,CAACe,QAAJ,EAAa;AACTI,MAAAA,GAAG,GAAG,+EAA+EnB,OAArF;AACH;;AAAA;AACDoB,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACAhB,IAAAA,KAAK,CAACuB,IAAN,CAAWH,GAAX,EAAgBF,QAAhB,EACCM,IADD,CACMC,QAAQ,IAAE;AACZR,MAAAA,QAAQ,CAACZ,WAAW,CAACoB,QAAQ,CAACC,IAAT,CAAcjB,OAAf,EAAwBgB,QAAQ,CAACC,IAAT,CAAcC,OAAtC,CAAZ,CAAR;AACH,KAHD,EAICC,KAJD,CAIOjB,KAAK,IAAE;AACVM,MAAAA,QAAQ,CAACP,QAAQ,CAACC,KAAK,CAACc,QAAN,CAAeC,IAAf,CAAoBf,KAArB,CAAT,CAAR;AACH,KAND;AAOH,GAtBD;AAuBH,CAxBM","sourcesContent":["import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nconst API_KEY = 'AIzaSyCluRXdmpTGmLP9XBUBi9gaRgrhVZKTH-0'\r\nexport const authStart =()=>{\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\nexport const authSuccess =(token, userId)=>{\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: token,\r\n        userId: userId\r\n    };\r\n};\r\n\r\nexport const authFail =(error)=>{\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error:error\r\n    };\r\n};\r\n\r\nexport const auth = (email, password, isSignup) =>{\r\n    return dispatch=>{\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        }\r\n\r\n\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key='+API_KEY;\r\n        \r\n        if(!isSignup){\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=' + API_KEY;\r\n        };\r\n        console.log(isSignup)        \r\n        axios.post(url, authData)\r\n        .then(response=>{\r\n            dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n        })\r\n        .catch(error=>{\r\n            dispatch(authFail(error.response.data.error));\r\n        })\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}