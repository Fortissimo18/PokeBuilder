{"ast":null,"code":"import _objectSpread from\"D:/ITCoursesProjects/React/PokeBuilder/poke-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import*as actionTypes from'./actionTypes';import axios from'../../axios-orders';export var purchasePokeSuccess=function purchasePokeSuccess(id,orderData){return{type:actionTypes.PURCHASE_POKE_SUCCESS,orderId:id,orderData:orderData};};export var purchasePokeFail=function purchasePokeFail(error){return{type:actionTypes.PURCHASE_POKE_FAIL,error:error};};export var purchasePokeStart=function purchasePokeStart(){return{type:actionTypes.PURCHASE_POKE_START};};export var purchasePoke=function purchasePoke(orderData,token){return function(dispatch){dispatch(purchasePokeStart());axios.post('/orders.json?auth='+token,orderData).then(function(response){dispatch(purchasePokeSuccess(response.data.name,orderData));}).catch(function(error){dispatch(purchasePokeFail(error));});};};export var purchaseInit=function purchaseInit(){return{type:actionTypes.PURCHASE_INIT};};export var fetchOrdersStart=function fetchOrdersStart(){return{type:actionTypes.FETCH_ORDERS_START};};export var fetchOrdersSuccess=function fetchOrdersSuccess(orders){return{type:actionTypes.FETCH_ORDERS_SUCCESS,orders:orders};};export var fetchOrdersFail=function fetchOrdersFail(error){return{type:actionTypes.FETCH_ORDERS_FAIL,error:error};};export var fetchOrders=function fetchOrders(token,userId){return function(dispatch){dispatch(fetchOrdersStart());axios.get('/orders.json?auth='+token+'&orderBy=\"userId\"&equalTo=\"'+userId+'\"').then(function(response){var fetchedOrders=[];for(var key in response.data){fetchedOrders.push(_objectSpread(_objectSpread({},response.data[key]),{},{id:key}));}dispatch(fetchOrdersSuccess(fetchedOrders));}).catch(function(error){dispatch(fetchOrdersFail(error));});};};","map":{"version":3,"sources":["D:/ITCoursesProjects/React/PokeBuilder/poke-builder/src/store/actions/order.js"],"names":["actionTypes","axios","purchasePokeSuccess","id","orderData","type","PURCHASE_POKE_SUCCESS","orderId","purchasePokeFail","error","PURCHASE_POKE_FAIL","purchasePokeStart","PURCHASE_POKE_START","purchasePoke","token","dispatch","post","then","response","data","name","catch","purchaseInit","PURCHASE_INIT","fetchOrdersStart","FETCH_ORDERS_START","fetchOrdersSuccess","orders","FETCH_ORDERS_SUCCESS","fetchOrdersFail","FETCH_ORDERS_FAIL","fetchOrders","userId","get","fetchedOrders","key","push"],"mappings":"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","sourcesContent":["import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const purchasePokeSuccess = (id, orderData) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_POKE_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData\r\n    };\r\n};\r\n\r\nexport const purchasePokeFail = (error) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_POKE_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const purchasePokeStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_POKE_START\r\n    };\r\n};\r\n\r\nexport const purchasePoke = (orderData, token) => {\r\n    return dispatch => {\r\n        dispatch(purchasePokeStart());\r\n        axios.post('/orders.json?auth='+token, orderData)\r\n            .then(response => {\r\n                dispatch(purchasePokeSuccess(response.data.name, orderData));\r\n            })\r\n            .catch(error => {\r\n                dispatch(purchasePokeFail(error));\r\n            });\r\n    }\r\n};\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    };\r\n};\r\n\r\n\r\nexport const fetchOrdersStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START,\r\n    };\r\n};\r\nexport const fetchOrdersSuccess = (orders) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    };\r\n};\r\n\r\nexport const fetchOrdersFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart());\r\n        axios.get('/orders.json?auth='+ token +'&orderBy=\"userId\"&equalTo=\"'+userId+'\"')\r\n            .then(response => {\r\n                const fetchedOrders = [];\r\n                for (let key in response.data) {\r\n                    fetchedOrders.push({\r\n                        ...response.data[key],\r\n                        id: key\r\n                    });\r\n                }\r\n                dispatch(fetchOrdersSuccess(fetchedOrders))\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchOrdersFail(error));\r\n            });\r\n    };\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}