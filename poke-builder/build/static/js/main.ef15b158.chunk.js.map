{"version":3,"sources":["components/Poke/PokeIngredients/PokeIngredients.module.css","components/UI/Input/Input.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Poke/BuildControls/BuildControl/BuildControl.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Poke/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","containers/Layout/Layout.module.css","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Poke/Poke.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckOutSummary/CheckOutSummary.module.css","containers/CheckOut/ContactData/ContactData.module.css","components/Order/Order.module.css","containers/Auth/Auth.module.css","hoc/Auxilliary.js","assets/images/burger-logo.png","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","containers/Layout/Layout.js","components/Poke/PokeIngredients/PokeIngredients.js","components/Poke/Poke.js","components/Poke/BuildControls/BuildControl/BuildControl.js","components/Poke/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Poke/OrderSummary/OrderSummary.js","axios-orders.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","store/actions/actionTypes.js","store/actions/pokeBuilder.js","store/actions/order.js","store/actions/auth.js","containers/PokeBuilder/PokeBuilder.js","components/Order/CheckOutSummary/CheckOutSummary.js","components/UI/Input/Input.js","shared/utility.js","containers/CheckOut/ContactData/ContactData.js","containers/CheckOut/CheckOut.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","reportWebVitals.js","store/reducers/pokeBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["module","exports","auxilliary","props","children","logo","className","classes","Logo","src","pokelogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","NavigationItems","isAuthenticated","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","menuClicked","DesktopOnly","isAuth","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","Auxilliary","closed","join","Layout","state","showSideDrawer","closeSideDrawerHandler","setState","toggleSideDrawerHandler","prevState","this","Content","Component","connect","auth","token","PokeIngredients","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","poke","transformedIngredients","Object","keys","ingredients","forEach","igKey","Array","_","i","push","length","Poke","buildControl","BuildControl","Label","label","Less","removed","disabled","disable","More","added","controls","buildControls","BuildControls","totalPrice","toFixed","map","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","Modal","nextProps","nextState","modalClosed","style","transform","opacity","button","Button","btnType","OrderSummary","ingredientSummary","textTransform","price","purchaseContinued","purchaseCancelled","instance","axios","create","baseURL","spinner","Loader","withErrorHandler","WrappedComponent","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","response","res","eject","message","ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","PURCHASE_POKE_SUCCESS","PURCHASE_POKE_FAIL","PURCHASE_POKE_START","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","initIngredients","dispatch","get","then","data","actionTypes","catch","purchasePoke","orderData","post","id","orderId","purchasePokeSuccess","name","purchasePokeFail","fetchOrders","userId","fetchedOrders","key","orders","fetchOrdersFail","API_KEY","authSuccess","idToken","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","setTimeout","email","password","isSignup","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","localId","authFail","setAuthRedirectPath","path","PokeBuilder","purchasing","purchasingHandler","onSetAuthRedirectPath","history","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","onInitIngredients","reduce","sum","el","disableInfo","ings","orderSummary","Spinner","onIngredientAdded","onIngredientRemoved","updatePurchaseState","pokeBuilder","ingName","ingredientName","actions","checkOutSummary","CheckOutSummary","width","margin","checkoutCancelled","checkoutContinued","input","InputElement","inputClasses","valid","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","clases","Input","checkValidity","rules","isValid","required","trim","minLength","maxLength","isEmail","test","isNumeric","ContactData","orderForm","placeholder","validation","validity","street","postcode","phone","deliveryMethod","formValidity","orderHandler","event","preventDefault","formData","formElementIdentifier","order","onOrderPoke","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","formElementsArray","config","form","onSubmit","formElement","loading","CheckOut","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","summary","purchaseRedirect","purchased","match","component","amount","ingredientOutput","ig","display","border","padding","Order","Number","parseFloat","Orders","onFetchOrders","Auth","isSignUp","controlName","updatedControls","submitHandler","onAuth","switchAuthModeHandler","buildingPoke","authRedirectPath","errorMessage","authRedirect","building","Logout","onLogout","App","onTryAutoSignup","routes","withRouter","getItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","INGREDIENT_PRICE","salad","bacon","cheese","meat","reducer","action","newOrder","concat","composeEnhancers","compose","rootReducer","combineReducers","pokeBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ef15b158.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"PokeIngredients_BreadBottom__2y2jV\",\"BreadTop\":\"PokeIngredients_BreadTop__2Hy-4\",\"Seeds1\":\"PokeIngredients_Seeds1__ZQj35\",\"Seeds2\":\"PokeIngredients_Seeds2__3yo3R\",\"Meat\":\"PokeIngredients_Meat__1b8LN\",\"Cheese\":\"PokeIngredients_Cheese__-UUGJ\",\"Salad\":\"PokeIngredients_Salad__2fH88\",\"Bacon\":\"PokeIngredients_Bacon__3gOL_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2AyDT\",\"Label\":\"Input_Label__1bc71\",\"InputElement\":\"Input_InputElement__Rl0Pi\",\"Invalid\":\"Input_Invalid__2EUUq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__1wg1R\",\"Open\":\"SideDrawer_Open__8ZfWn\",\"Close\":\"SideDrawer_Close__1Xgqq\",\"Logo\":\"SideDrawer_Logo__1fCjN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__3GdiD\",\"Label\":\"BuildControl_Label__10Gfb\",\"Less\":\"BuildControl_Less__3YL_e\",\"More\":\"BuildControl_More__2Fked\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__3f6Nv\",\"Logo\":\"Toolbar_Logo__2RAg1\",\"DesktopOnly\":\"Toolbar_DesktopOnly__23bgi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2HEpC\",\"active\":\"NavigationItem_active__31Ii1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__Vw3fF\",\"OrderButton\":\"BuildControls_OrderButton__3odOp\",\"enable\":\"BuildControls_enable__69PFs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3jASi\",\"Success\":\"Button_Success__OzRWa\",\"Danger\":\"Button_Danger__X631W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__b_CYY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__30JIO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__2XbxQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__oNu2L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__32MSS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Poke\":\"Poke_Poke__3_qf9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1eHQE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1TRZv\",\"load3\":\"Spinner_load3__VrXwx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckOutSummary\":\"CheckOutSummary_CheckOutSummary__3xmek\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__oBokH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__9F5QY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__SbAwu\"};","const auxilliary =(props)=>props.children;\r\nexport default auxilliary;","export default __webpack_public_path__ + \"static/media/burger-logo.ec69c7f6.png\";","import React from 'react';\r\nimport pokelogo from '../../assets/images/burger-logo.png';\r\nimport classes from './Logo.module.css';\r\n\r\nconst logo=()=>(\r\n<div className={classes.Logo}>\r\n    <img src={pokelogo} alt=\"MyPoke\"/>\r\n</div>\r\n);\r\n\r\nexport default logo;","import React from 'react';\r\nimport classes from './NavigationItem.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst navigationItem = (props) => (\r\n    <li className={classes.NavigationItem}>\r\n        <NavLink\r\n            to={props.link}\r\n            exact={props.exact}\r\n            activeClassName={classes.active}>\r\n            {props.children}\r\n        </NavLink>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;","import React from 'react';\r\nimport classes from './NavigationItems.module.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst navigationItems =(props)=>(\r\n<ul className={classes.NavigationItems}>\r\n    <NavigationItem link=\"/\" exact>Poke Builder</NavigationItem>\r\n    {props.isAuthenticated \r\n    ? <NavigationItem link=\"/orders\">Orders</NavigationItem>\r\n    : null}\r\n    {!props.isAuthenticated  \r\n    ?<NavigationItem link=\"/auth\">Sign In</NavigationItem>\r\n    :<NavigationItem link=\"/logout\">Log Out</NavigationItem> }\r\n</ul>\r\n);\r\n\r\nexport default navigationItems;","import React from 'react';\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst drawerToggle = (props) => (\r\n    <div\r\n        className={classes.DrawerToggle}\r\n        onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\nexport default drawerToggle;","import React from 'react';\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar=(props)=>(\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked={props.menuClicked}/>\r\n        <div className={classes.Logo}>\r\n            <Logo /> \r\n        </div>\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems isAuthenticated={props.isAuth}/>\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div \r\n    className={classes.Backdrop}\r\n    onClick={props.clicked}\r\n    ></div>: null\r\n);\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport classes from './SideDrawer.module.css';\r\nimport Auxilliary from '../../../hoc/Auxilliary';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop'\r\n\r\nconst sideDrawer = (props) => {\r\n    let attachedClasses = [classes.SideDrawer, classes.Close];\r\n    if (props.open){\r\n        attachedClasses = [classes.SideDrawer, classes.Open];\r\n    }\r\n\r\n    return (\r\n        <Auxilliary>\r\n            <Backdrop show={props.open} clicked={props.closed}></Backdrop>\r\n            <div className={attachedClasses.join(' ')} onClick={props.closed}>\r\n                <div className={classes.Logo}>\r\n                    <Logo />\r\n                </div>\r\n                <nav>\r\n                    <NavigationItems isAuthenticated={props.isAuth}/>\r\n                </nav>\r\n            </div>\r\n        </Auxilliary>\r\n\r\n    );\r\n}\r\n\r\nexport default sideDrawer;","import React, { Component } from 'react';\r\nimport Auxilliary from '../../hoc/Auxilliary';\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n    closeSideDrawerHandler=()=>{\r\n        this.setState({showSideDrawer:false});\r\n    }\r\n\r\n    toggleSideDrawerHandler=()=>{\r\n        this.setState((prevState)=>{return{showSideDrawer: !prevState.SideDrawer};});\r\n    }\r\n\r\n    render() {\r\n        return (<Auxilliary>\r\n            <div>\r\n                <Toolbar \r\n                isAuth={this.props.isAuthenticated}\r\n                menuClicked={this.toggleSideDrawerHandler}/>\r\n                <SideDrawer \r\n                isAuth={this.props.isAuthenticated}\r\n                open = {this.state.showSideDrawer} closed={this.closeSideDrawerHandler}/>\r\n            </div>\r\n            <main className={classes.Content}>\r\n                {this.props.children}\r\n            </main>\r\n        </Auxilliary>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps=state=>{\r\n    return {\r\n        isAuthenticated: state.auth.token !==null\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Layout);","import React, { Component } from 'react';\r\nimport classes from './PokeIngredients.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\nclass PokeIngredients extends Component{\r\n    render(){\r\n        let ingredient = null;\r\n        switch (this.props.type) {\r\n            case ('bread-buttom'):\r\n                ingredient = <div className={classes.BreadBottom}></div>;\r\n                break;\r\n    \r\n            case ('bread-top'):\r\n                ingredient = <div className={classes.BreadTop}>\r\n                    <div className={classes.Seeds1}></div>\r\n                    <div className={classes.Seeds2}></div>\r\n                </div>;\r\n                break;\r\n    \r\n            case ('meat'):\r\n                ingredient = <div className={classes.Meat}></div>;\r\n                break;\r\n    \r\n            case ('cheese'):\r\n                ingredient = <div className={classes.Cheese}></div>;\r\n                break;\r\n    \r\n            case ('salad'):\r\n                ingredient = <div className={classes.Salad}></div>;\r\n                break;\r\n    \r\n            case ('bacon'):\r\n                ingredient = <div className={classes.Bacon}></div>;\r\n                break;\r\n            \r\n            default: ingredient = null;\r\n        }\r\n        return ingredient;\r\n    }\r\n};\r\n\r\n\r\nPokeIngredients.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default PokeIngredients;","import React from 'react';\r\nimport classes from './Poke.module.css';\r\nimport PokeIngredients from './PokeIngredients/PokeIngredients';\r\n\r\nconst poke = (props) => {\r\n    let transformedIngredients = [];\r\n    Object.keys(props.ingredients)\r\n    .forEach(igKey => {\r\n            return [...Array(props.ingredients[igKey])].forEach((_, i) => {\r\n                    transformedIngredients.push(<PokeIngredients key={igKey + i} type={igKey} />);\r\n                });\r\n        });\r\n    // .reduce((arr, el) => {\r\n    //     return arr.concat(el);\r\n    // },[]);\r\n\r\n\r\n    if (transformedIngredients.length === 0) {\r\n        transformedIngredients = <p>Please add at least 1 ingredient</p>\r\n    } \r\n    return (\r\n        <div className={classes.Poke}>\r\n            <PokeIngredients type=\"bread-top\" />\r\n            {transformedIngredients}\r\n            <PokeIngredients type=\"bread-buttom\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default poke;","import React from 'react';\r\nimport classes from './BuildControl.module.css';\r\n\r\nconst buildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button \r\n        className={classes.Less} \r\n        onClick={props.removed}\r\n        disabled={props.disable}>Less</button>\r\n        <button className={classes.More} onClick={props.added}>More</button>\r\n    </div>\r\n\r\n);\r\n\r\nexport default buildControl;","import React from 'react';\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    { label: 'Salad', type: 'salad' },\r\n    { label: 'Bacon', type: 'bacon' },\r\n    { label: 'Cheese', type: 'cheese' },\r\n    { label: 'Meat', type: 'meat' },\r\n\r\n];\r\n\r\nconst buildControls = (props) => (\r\n    <div className={classes.BuildControls}>\r\n        <p>Total Price: {props.totalPrice.toFixed(2)}</p>\r\n        {controls.map(ctrl => (\r\n            <BuildControl \r\n            key={ctrl.label} \r\n            label={ctrl.label} \r\n            added = {()=>props.ingredientAdded(ctrl.type)}\r\n            removed = {()=>props.ingredientRemoved(ctrl.type)}\r\n            disable = {props.disable[ctrl.type]}/>\r\n        ))}\r\n        <button \r\n        className={classes.OrderButton} \r\n        disabled={!props.purchasable}\r\n        onClick={props.ordered}> \r\n        {props.isAuth ? \"Order Now\" : \"Sign In to Order\"}</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControls;","import React, { Component } from 'react';\r\nimport classes from './Modal.module.css';\r\nimport Auxilliary from '../../../hoc/Auxilliary';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nclass Modal extends Component {\r\n    shouldComponentUpdate(nextProps,nextState){\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Auxilliary>\r\n                <Backdrop\r\n                    show={this.props.show}\r\n                    clicked={this.props.modalClosed} />\r\n                <div className={classes.Modal}\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                        opacity: this.props.show ? '1' : '0'\r\n                    }}>\r\n                    {this.props.children}\r\n                </div>\r\n            </Auxilliary>);\r\n    };\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst button = (props) => (\r\n    <button\r\n        disabled={props.disabled}\r\n        className={[classes.Button, classes[props.btnType]].join(' ')}\r\n        onClick={props.clicked}>\r\n        {props.children}\r\n    </button>\r\n);\r\n\r\nexport default button;","import React, { Component } from 'react';\r\nimport Auxilliary from '../../../hoc/Auxilliary';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nclass OrderSummary extends Component {\r\n\r\n    render(){\r\n          const ingredientSummary = Object.keys(this.props.ingredients)\r\n        .map(igKey => {\r\n            return <li key={igKey}>\r\n                <span style={{ textTransform: 'capitalize' }}>\r\n                    {igKey}\r\n                </span>\r\n                : {this.props.ingredients[igKey]}</li>\r\n        }\r\n        );\r\n    return (\r\n        <Auxilliary>\r\n            <h3>Your Order: </h3>\r\n            <ul>\r\n                {ingredientSummary}    \r\n            </ul>\r\n            <p><strong>Total Price: {this.props.price}</strong></p>\r\n            <p>Continue to Checkout?</p>\r\n            <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>Continue</Button>\r\n            <Button btnType=\"Danger\" clicked={this.props.purchaseCancelled}>Cancel</Button>\r\n        </Auxilliary>\r\n    );}\r\n}\r\n\r\nexport default OrderSummary;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://poke-builder-87324-default-rtdb.firebaseio.com/'\r\n});\r\n\r\nexport default instance;\r\n","import React from 'react';\r\nimport classes from './Spinner.module.css'\r\nconst spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\nexport default spinner;","import React, { Component } from 'react';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Auxilliary from '../Auxilliary';\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return class extends Component {\r\n\r\n        state = {\r\n            error: null\r\n        }\r\n\r\n        componentWillMount() {\r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({ error: null });\r\n                return req;\r\n            });\r\n            this.reqInterceptor = axios.interceptors.response.use(res => res, error => {\r\n                this.setState({ error: error });\r\n            });\r\n        }\r\n        componentWillUnmount(){//release axios interceptors to prevent memory leak\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.reqInterceptor);\r\n        }\r\n\r\n        errorConfirmedHandler= ()=> {\r\n            this.setState({ error: null });\r\n        }\r\n\r\n\r\n        render() {\r\n            return (\r\n                <Auxilliary>\r\n                    <Modal show={this.state.error}\r\n                        modalClosed={this.errorConfirmedHandler}>\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n                </Auxilliary>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default withErrorHandler;","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';  \r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\nexport const PURCHASE_POKE_SUCCESS = 'PURCHASE_POKE_SUCCESS';\r\nexport const PURCHASE_POKE_FAIL = 'PURCHASE_POKE_FAIL';\r\nexport const PURCHASE_POKE_START = 'PURCHASE_POKE_START';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\r\n\r\n\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\nexport const SET_AUTH_REDIRECT_PATH ='SET_AUTH_REDIRECT_PATH';","import axios from '../../axios-orders';\r\nimport * as actionTypes from './actionTypes';\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\nexport const setIngredients = (ingredients) => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients,\r\n        totalPrice: 4,\r\n        error:false\r\n    };\r\n};\r\n\r\nexport const fetchIngredientsFailed = (ingredients) => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED,\r\n        ingredients: ingredients\r\n    };\r\n};\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n     axios.get('https://poke-builder-87324-default-rtdb.firebaseio.com/ingredients.json')\r\n            .then(response => {\r\n                dispatch(setIngredients(response.data));\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchIngredientsFailed(error))\r\n            });\r\n    }\r\n}","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const purchasePokeSuccess = (id, orderData) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_POKE_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData\r\n    };\r\n};\r\n\r\nexport const purchasePokeFail = (error) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_POKE_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const purchasePokeStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_POKE_START\r\n    };\r\n};\r\n\r\nexport const purchasePoke = (orderData, token) => {\r\n    return dispatch => {\r\n        dispatch(purchasePokeStart());\r\n        axios.post('/orders.json?auth='+token, orderData)\r\n            .then(response => {\r\n                dispatch(purchasePokeSuccess(response.data.name, orderData));\r\n            })\r\n            .catch(error => {\r\n                dispatch(purchasePokeFail(error));\r\n            });\r\n    }\r\n};\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    };\r\n};\r\n\r\n\r\nexport const fetchOrdersStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START,\r\n    };\r\n};\r\nexport const fetchOrdersSuccess = (orders) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    };\r\n};\r\n\r\nexport const fetchOrdersFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart());\r\n        axios.get('/orders.json?auth='+ token +'&orderBy=\"userId\"&equalTo=\"'+userId+'\"')\r\n            .then(response => {\r\n                const fetchedOrders = [];\r\n                for (let key in response.data) {\r\n                    fetchedOrders.push({\r\n                        ...response.data[key],\r\n                        id: key\r\n                    });\r\n                }\r\n                dispatch(fetchOrdersSuccess(fetchedOrders))\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchOrdersFail(error));\r\n            });\r\n    };\r\n};\r\n\r\n\r\n","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nconst API_KEY = 'AIzaSyCluRXdmpTGmLP9XBUBi9gaRgrhVZKTH-0'\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: token,\r\n        userId: userId\r\n    };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId');\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    };\r\n}\r\n\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => { dispatch(logout()) }, expirationTime * 1000);\r\n    };\r\n}\r\n\r\nexport const auth = (email, password, isSignup) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        }\r\n\r\n\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=' + API_KEY;\r\n\r\n        if (!isSignup) {\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=' + API_KEY;\r\n        };\r\n        axios.post(url, authData)\r\n            .then(response => {\r\n                const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000)\r\n                localStorage.setItem('token', response.data.idToken);\r\n                localStorage.setItem('expirationDate', expirationDate);\r\n                localStorage.setItem('userId', response.data.localId);\r\n                dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n                dispatch(checkAuthTimeout(response.data.expiresIn));\r\n            })\r\n            .catch(error => {\r\n                dispatch(authFail(error.response.data.error));\r\n            })\r\n    };\r\n};\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path: path\r\n    }\r\n}\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            dispatch(logout());\r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if (expirationDate <= new Date()) {\r\n                dispatch(logout());\r\n            } else {\r\n                const userId = localStorage.getItem('userId');\r\n                dispatch(authSuccess(token, userId));\r\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime())/1000));\r\n            }\r\n        }\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Auxilliary from '../../hoc/Auxilliary';\r\nimport Poke from '../../components/Poke/Poke';\r\nimport BuildControls from '../../components/Poke/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Poke/OrderSummary/OrderSummary';\r\nimport axios from '../../axios-orders';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions/index';\r\n\r\n\r\nclass PokeBuilder extends Component {\r\n\r\n    state = {\r\n        // purchasable: false,\r\n        purchasing: false,\r\n    };\r\n\r\n    purchasingHandler = () => {\r\n        if(this.props.isAuthenticated){\r\n            this.setState({ purchasing: true });\r\n        }\r\n        else{\r\n            this.props.onSetAuthRedirectPath('/checkout')\r\n            this.props.history.push('/auth');\r\n        }\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({ purchasing: false });\r\n    }\r\n\r\n    // purchaseContinueHandler = () => {\r\n    //     const queryParams = [];\r\n    //     for (let i in this.props.ings) {\r\n    //         queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.props.ings[i]));\r\n    //     }\r\n    //     queryParams.push('price=' + this.props.price);\r\n    //     const queryString = queryParams.join('&');\r\n    //     this.props.history.push(\r\n    //         {\r\n    //             pathname: '/checkout',\r\n    //             search: '?' + queryString\r\n    //         });\r\n    // }\r\n    componentDidMount() {\r\n        this.props.onInitIngredients()\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        this.props.onInitPurchase();\r\n        this.props.history.push('/checkout');\r\n    }\r\n\r\n    updatePurchaseState(ingredients) {\r\n        const sum = Object.keys(ingredients)\r\n            .map(igKey => {\r\n                return ingredients[igKey];\r\n            })\r\n            .reduce((sum, el) => {\r\n                return sum + el;\r\n            }, 0);\r\n        return sum > 0\r\n    }\r\n\r\n    // addIngredientHandler = (type) => {\r\n    //     const oldCount = this.props.ings[type];\r\n    //     const updatedCount = oldCount + 1;\r\n    //     const updatedIngredients = { ...this.props.ings };\r\n    //     updatedIngredients[type] = updatedCount;\r\n\r\n    //     const newPrice = this.props.price + INGREDIENT_PRICE[type];\r\n    //     this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\r\n    //     this.updatePurchaseState(updatedIngredients);\r\n\r\n    // }\r\n\r\n    // removeIngredientHandler = (type) => {\r\n    //     const ol dCount = this.props.ings[type];\r\n    //     const updatedCount = oldCount - 1;\r\n    //     if (updatedCount < 0) {\r\n    //         return;\r\n    //     }\r\n\r\n    //     const updatedIngredients = { ...this.props.ings };\r\n    //     updatedIngredients[type] = updatedCount;\r\n\r\n    //     const newPrice = this.props.price - INGREDIENT_PRICE[type];\r\n    //     this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\r\n    //     this.updatePurchaseState(updatedIngredients);\r\n    // }\r\n\r\n\r\n    render() {\r\n        const disableInfo = {\r\n            ...this.props.ings\r\n        };\r\n        for (let key in disableInfo) {\r\n            disableInfo[key] = disableInfo[key] <= 0;\r\n        }\r\n\r\n\r\n        // if (this.state.loading) {\r\n        //     orderSummary = <Spinner />\r\n        // }\r\n        let orderSummary = null;\r\n        let poke = this.props.error ? <p>Ingredients cannot be loaded</p> : <Spinner />;\r\n        if (this.props.ings) {\r\n            poke = <Auxilliary>\r\n                <Poke ingredients={this.props.ings} />\r\n                <BuildControls\r\n                    isAuth = {this.props.isAuthenticated}\r\n                    ingredientAdded={this.props.onIngredientAdded}\r\n                    ingredientRemoved={this.props.onIngredientRemoved}\r\n                    totalPrice={this.props.price}\r\n                    purchasable={this.updatePurchaseState(this.props.ings)}\r\n                    ordered={this.purchasingHandler}\r\n                    disable={disableInfo} />\r\n            </Auxilliary>;\r\n\r\n            orderSummary = <OrderSummary\r\n                price={this.props.price.toFixed(2)}\r\n                ingredients={this.props.ings}\r\n                purchaseCancelled={this.purchaseCancelHandler}\r\n                purchaseContinued={this.purchaseContinueHandler} />\r\n        }\r\n        if (this.props.ingredients === null) {\r\n            orderSummary = <Spinner></Spinner>\r\n        }\r\n        return (\r\n            <Auxilliary>                \r\n                <Modal\r\n                show={this.state.purchasing}\r\n                modalClosed={this.purchaseCancelHandler}>\r\n                {orderSummary}\r\n            </Modal>\r\n                {poke}\r\n                </Auxilliary>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.pokeBuilder.ingredients,\r\n        price: state.pokeBuilder.totalPrice,\r\n        error: state.pokeBuilder.error,\r\n        isAuthenticated: state.auth.token !== null\r\n    };\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\r\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\r\n        onInitIngredients: () => dispatch(actions.initIngredients()),\r\n        onInitPurchase:() => dispatch(actions.purchaseInit()),\r\n        onSetAuthRedirectPath:(path)=> dispatch(actions.setAuthRedirectPath(path))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(PokeBuilder, axios));","import React from 'react';\r\nimport Poke from '../../Poke/Poke';\r\nimport Button from '../../UI/Button/Button';\r\nimport classes from './CheckOutSummary.module.css';\r\n\r\nconst checkOutSummary = (props) => {\r\n    return (\r\n        <div className={classes.CheckOutSummary}>\r\n            <h1>\r\n                Eat Healthier Everyday!\r\n            </h1>\r\n            <div style={{ width: '100%', margin: 'auto' }}>\r\n                <Poke ingredients={props.ingredients} />\r\n            </div>\r\n            <Button\r\n                btnType=\"Danger\"\r\n                clicked={props.checkoutCancelled}> \r\n                Cancel</Button>\r\n            <Button\r\n                btnType=\"Success\"\r\n                clicked={props.checkoutContinued}>\r\n            Continue</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default checkOutSummary;","import React from 'react';\r\nimport classes from './Input.module.css';\r\nimport clases from './Input.module.css';\r\n\r\nconst input = (props) => {\r\n    let InputElement = null;\r\n    const inputClasses = [classes.InputElement];\r\n    if (!props.valid && props.touched){\r\n        inputClasses.push(classes.Invalid);\r\n    }\r\n    switch (props.elementType) {\r\n        case ('input'):\r\n            InputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />\r\n            break;\r\n        case ('textArea'):\r\n            InputElement = <textarea\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />\r\n            break;\r\n        case ('select'):\r\n            InputElement =\r\n                <select\r\n                    className={inputClasses.join(' ')}\r\n                    value={props.value}\r\n                    onChange={props.changed}>\r\n                    {props.elementConfig.options.map(option => (\r\n                        <option key={option.value}\r\n                            value={option.value}>\r\n                            {option.displayValue}\r\n                        </option>))}\r\n                </select>\r\n            break;\r\n        default:\r\n            InputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <div className={clases.Input}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {InputElement}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default input;","export const checkValidity =(value, rules)=> {\r\n    let isValid = true;\r\n    if (!rules) {\r\n        return true;\r\n    }\r\n\r\n    if (rules.required) {\r\n        isValid = value.trim() !== '' && isValid;\r\n    }\r\n\r\n    if (rules.minLength) {\r\n        isValid = value.length >= rules.minLength && isValid\r\n    }\r\n\r\n    if (rules.maxLength) {\r\n        isValid = value.length <= rules.maxLength && isValid\r\n    }\r\n\r\n    if (rules.isEmail) {\r\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n        isValid = pattern.test(value) && isValid\r\n    }\r\n\r\n    if (rules.isNumeric) {\r\n        const pattern = /^\\d+$/;\r\n        isValid = pattern.test(value) && isValid\r\n    }\r\n\r\n    return isValid;\r\n}","import React, { Component } from 'react';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport axios from '../../../axios-orders';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport {connect} from 'react-redux';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../../store/actions/index';\r\nimport {checkValidity} from '../../../shared/utility';\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                validity: false,\r\n                touched: false\r\n            },\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Street'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                validity: false,\r\n                touched: false\r\n            },\r\n\r\n            postcode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Postcode'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 4,\r\n                    maxLength: 4  \r\n                },\r\n                validity: false,\r\n                touched: false\r\n            },\r\n            phone: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Phone Number'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 10,\r\n                    maxLength: 10\r\n                },\r\n                validity: false,\r\n                touched: false\r\n            },\r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        { value: 'fastest', displayValue: 'Fastest' },\r\n                        { value: 'cheapest', displayValue: 'Cheapest' }\r\n                    ]\r\n                },\r\n                value: 'fastest',\r\n                validation:{},\r\n                validity: true\r\n            },\r\n\r\n        },\r\n        formValidity: false\r\n    }\r\n\r\n\r\n    orderHandler = (event) => {\r\n        event.preventDefault(); //prevent page reload\r\n        // this.setState({ loading: true });\r\n        const formData = {};\r\n        for (let formElementIdentifier in this.state.orderForm) {\r\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\r\n        }\r\n\r\n        const order = {\r\n            ingredients: this.props.ings,\r\n            price: this.props.price,\r\n            orderData: formData,\r\n            userId: this.props.userId\r\n        };\r\n\r\n        this.props.onOrderPoke(order, this.props.token);\r\n        // axios.post('/orders.json', order)\r\n        //     .then(response => {\r\n        //         this.setState({ loading: false });\r\n        //         this.props.history.push('/');\r\n        //     })\r\n        //     .catch(this.setState({ loading: false }));\r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => { //display the typed in content on the form in real time (two-way binding)\r\n        const updatedOrderForm = {\r\n            ...this.state.orderForm\r\n        };\r\n        const updatedFormElement = {\r\n            ...updatedOrderForm[inputIdentifier]\r\n        }; //deep clone\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.validity = checkValidity(updatedFormElement.value, updatedFormElement.validation);\r\n        updatedFormElement.touched = true;\r\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n\r\n        let formValidity = true;\r\n        for (let inputIdentifier in updatedOrderForm){\r\n            formValidity = updatedOrderForm[inputIdentifier].validity && formValidity\r\n        }\r\n\r\n        this.setState({ orderForm: updatedOrderForm, formValidity: formValidity });\r\n    }\r\n\r\n    render() {\r\n        const formElementsArray = [];\r\n        for (let key in this.state.orderForm) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            }); \r\n        }\r\n\r\n        let form = (<form onSubmit={this.orderHandler}>\r\n            {formElementsArray.map(formElement => (\r\n                <Input\r\n                    key={formElement.id}\r\n                    elementType={formElement.config.elementType}\r\n                    elementConfig={formElement.config.elementConfig}\r\n                    value={formElement.config.value}\r\n                    valid={formElement.config.validity}\r\n                    touched = {formElement.config.touched}\r\n                    changed={(event) => this.inputChangedHandler(event, formElement.id)}\r\n                />\r\n            ))}\r\n            <Button btnType=\"Success\" disabled = {!this.state.formValidity}>\r\n                Order</Button>\r\n        </form>);\r\n\r\n        if (this.props.loading) {\r\n            form = <Spinner />;\r\n        }\r\n        return (\r\n            <div>\r\n                <h4>Please Enter your Contact Info</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        ings: state.pokeBuilder.ingredients,\r\n        price: state.pokeBuilder.totalPrice,\r\n        loading: state.order.loading,\r\n        token:state.auth.token,\r\n        userId: state.auth.userId\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return{\r\n            onOrderPoke:(orderData, token) => dispatch(actions.purchasePoke(orderData, token))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React, { Component } from 'react';\r\nimport CheckOutSummary from '../../components/Order/CheckOutSummary/CheckOutSummary';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport ContactData from './ContactData/ContactData';\r\nimport classes from './ContactData/ContactData.module.css';\r\nimport { connect } from 'react-redux';\r\n\r\nclass CheckOut extends Component {\r\n\r\n    checkoutCancelledHandler = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    checkoutContinuedHandler = () => {\r\n        this.props.history.replace('/checkout/contact-data')\r\n    }\r\n\r\n\r\n    render() {\r\n        let summary = <Redirect to='/' />;\r\n        if (this.props.ings) {\r\n            const purchaseRedirect = this.props.purchased ? <Redirect to='/' /> : null\r\n            summary = (\r\n                <div className={classes.ContactData}>\r\n                    {purchaseRedirect}\r\n                    <CheckOutSummary\r\n                        ingredients={this.props.ings}\r\n                        checkoutCancelled={this.checkoutCancelledHandler}\r\n                        checkoutContinued={this.checkoutContinuedHandler} />\r\n                    <Route\r\n                        path={this.props.match.path + '/contact-data'}\r\n                        component={ContactData} /> </div>)\r\n        }\r\n        return summary;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.pokeBuilder.ingredients,\r\n        purchased: state.order.purchased\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(CheckOut);","import React from 'react';\r\nimport classes from './Order.module.css';\r\n\r\nconst order = (props) => {\r\n    const ingredients = [];\r\n    for (let ingredientName in props.ingredients) {\r\n        ingredients.push(\r\n            {\r\n                name: ingredientName,\r\n                amount: props.ingredients[ingredientName]\r\n            }\r\n        );\r\n    }\r\n    const ingredientOutput = ingredients.map(ig => {\r\n        return <span\r\n            key={ig.name}\r\n            style={{\r\n                textTransform: 'capitalize',\r\n                display: 'inline-block',\r\n                margin: '0 8px',\r\n                border: '1px solid #ccc',\r\n                padding: '5px'}}>\r\n            {ig.name} X {ig.amount} </span>;\r\n    });\r\n\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>Ingredients: {ingredientOutput}</p>\r\n            <p>Price: <strong>AUD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default order;\r\n","import React, { Component } from 'react';\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nclass Orders extends Component {\r\n    state = {\r\n        orders: [],\r\n        loading: true\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchOrders(this.props.token, this.props.userId);\r\n    }\r\n\r\n    render() {\r\n        let orders = <Spinner />;\r\n        if (!this.props.loading) {\r\n            orders = this.props.orders.map(order => (\r\n                <Order\r\n                    key={order.id}\r\n                    ingredients={order.ingredients}\r\n                    price={order.price} />\r\n            ))\r\n        }\r\n        return (\r\n            <div>\r\n                {orders}\r\n            </div>);\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token:state.auth.token,\r\n        userId: state.auth.userId\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: (token,userId) => dispatch(actions.fetchOrders(token, userId))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","import React, { Component } from 'react';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport classes from './Auth.module.css';\r\nimport * as actions from '../../store/actions/index';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {checkValidity} from '../../shared/utility';\r\n\r\nclass Auth extends Component {\r\n\r\n    state = {\r\n        controls: {\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Email'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                validity: false,\r\n                touched: false\r\n            },\r\n            password: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'password',\r\n                    placeholder: 'Password'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                },\r\n                validity: false,\r\n                touched: false\r\n            },\r\n        },\r\n        isSignUp: true\r\n    }\r\n\r\n    inputChangedHandler = (event, controlName) => {\r\n        const updatedControls = {\r\n            ...this.state.controls,\r\n            [controlName]: {\r\n                ...this.state.controls[controlName],\r\n                value: event.target.value,\r\n                validity: checkValidity(event.target.value, this.state.controls[controlName].validation),\r\n                touched: true\r\n            }\r\n        };\r\n        this.setState({ controls: updatedControls });\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();        \r\n        this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignUp);\r\n    }\r\n\r\n    switchAuthModeHandler =()=>{\r\n        this.setState(prevState => {\r\n            return{\r\n                isSignUp:!prevState.isSignUp\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount(){\r\n        if (! this.props.buildingPoke && this.props.authRedirectPath !=='/'){\r\n            this.props.onSetAuthRedirectPath();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const formElementsArray = [];\r\n        for (let key in this.state.controls) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.controls[key]\r\n            });\r\n        }\r\n\r\n        let form = formElementsArray.map(formElement => (\r\n            <Input\r\n                key={formElement.id}\r\n                elementType={formElement.config.elementType}\r\n                elementConfig={formElement.config.elementConfig}\r\n                value={formElement.config.value}\r\n                valid={formElement.config.validity}\r\n                touched={formElement.config.touched}\r\n                changed={(event) => this.inputChangedHandler(event, formElement.id)}/>\r\n        ));\r\n\r\n        if(this.props.loading){\r\n            form=<Spinner/>\r\n        }\r\n\r\n        let errorMessage  = null;\r\n\r\n        if(this.props.error){\r\n            errorMessage=(\r\n                <p>{this.props.error.message}</p>\r\n            );\r\n        }\r\n        let authRedirect = null;\r\n        if(this.props.isAuthenticated){\r\n            authRedirect = <Redirect to={this.props.authRedirectPath}/>\r\n        }\r\n        return (\r\n            <div className={classes.Auth}>\r\n                {authRedirect}\r\n                {errorMessage}\r\n                <form onSubmit={this.submitHandler}>\r\n                    {form}\r\n                    <Button btnType=\"Success\">Submit</Button>\r\n                </form>\r\n                <Button \r\n                clicked = {this.switchAuthModeHandler}\r\n                btnType = \"Danger\">Switch to {this.state.isSignUp? \"Sign In\" : \"Sign Up\"}</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        loading: state.auth.loading,\r\n        error: state.auth.error,\r\n        isAuthenticated: state.auth.token !== null,\r\n        buildingPoke: state.pokeBuilder.building,\r\n        authRedirectPath: state.auth.authRedirectPath\r\n    }\r\n}\r\n\r\n \r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (email, password, isSignUp) => dispatch(actions.auth(email, password,isSignUp)),\r\n        onSetAuthRedirectPath:() => dispatch(actions.setAuthRedirectPath('/'))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","import React, { Component } from 'react';\r\nimport * as actions from '../../../store/actions/index';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Logout extends Component {\r\n    componentDidMount() {\r\n        this.props.onLogout()\r\n    }\r\n    render() {\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: () => dispatch(actions.logout())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { Component } from 'react';\nimport Layout from './containers/Layout/Layout';\nimport PokeBuilder from './containers/PokeBuilder/PokeBuilder';\nimport { Route, Switch, withRouter, Redirect} from 'react-router-dom';\nimport CheckOut from './containers/CheckOut/CheckOut';\nimport Orders from './containers/Orders/Orders';\nimport Auth from './containers/Auth/Auth';\nimport Logout from './containers/Auth/Logout/Logout';\nimport {connect} from 'react-redux';\nimport *  as actions from './store/actions/index';\n\nclass App extends Component {\n  componentDidMount(){\n    this.props.onTryAutoSignup();\n  }\n\n  render(){\n    let routes = (\n      <Switch>\n        <Route path=\"/auth\" component={Auth} />\n          <Route path=\"/\" exact component={PokeBuilder} />\n          <Redirect to=\"/\" />\n      </Switch>);\n      if(this.props.isAuthenticated){\n        routes = (\n        <Switch>\n        <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/checkout\" component={CheckOut} />\n          <Route path=\"/orders\" component={Orders} />\n          <Route path=\"/auth\" component={Auth} />\n          <Route path=\"/\" exact component={PokeBuilder} />\n          <Redirect to=\"/\" />\n          {/* <Route path=\"/\" exact render={props => <PokeBuilder/>} /> */}\n        </Switch>);\n      }\n\n      return (\n    <div>\n      <Layout>\n        {routes}\n      </Layout>\n    </div>\n  );\n  }\n\n}\n\nconst mapStateToProps = state =>{\n  return{\n    isAuthenticated:state.auth.token !== null\n  };\n}\n\n\nconst mapDispatchToProps = dispatch =>{\n  return{\n    onTryAutoSignup:() => dispatch(actions.authCheckState())\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState ={\r\n    ingredients:null,\r\n    totalPrice: 4,\r\n    error:false,\r\n    building: false\r\n};\r\n\r\nconst INGREDIENT_PRICE = {\r\n    salad: 0.5,\r\n    bacon: 1,\r\n    cheese: 0.4,\r\n    meat: 2\r\n};\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case actionTypes.ADD_INGREDIENT:\r\n            return{\r\n                //overwrite the copy of ingredients\r\n                ...state,\r\n                ingredients:{\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]: state.ingredients[action.ingredientName] +1 \r\n                },\r\n                totalPrice: state.totalPrice + INGREDIENT_PRICE[action.ingredientName],\r\n                building: true\r\n            };\r\n        case actionTypes.REMOVE_INGREDIENT:\r\n            return{\r\n                ...state,\r\n                ingredients:{\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]: state.ingredients[action.ingredientName] -1 \r\n                },\r\n                totalPrice: state.totalPrice - INGREDIENT_PRICE[action.ingredientName],\r\n                building:true\r\n            };\r\n            case actionTypes.SET_INGREDIENTS:\r\n                return{\r\n                    ...state,\r\n                    ingredients: action.ingredients,\r\n                    totalPrice: 4,\r\n                    error:false,\r\n                    building: false\r\n            };\r\n            case actionTypes.FETCH_INGREDIENTS_FAILED:\r\n                {\r\n                return{\r\n                    ...state,\r\n                    error:true\r\n                }\r\n            }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n};\r\n\r\nconst reducer = (state = initialState, action) =>{\r\n    switch(action.type){\r\n        case actionTypes.FETCH_ORDERS_START:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case actionTypes.FETCH_ORDERS_SUCCESS:\r\n            return{\r\n                ...state,\r\n                orders: action.orders,\r\n                loading: false\r\n            }\r\n        case actionTypes.FETCH_ORDERS_FAIL:\r\n            return{\r\n                ...state,\r\n                loading: false\r\n            }\r\n        case actionTypes.PURCHASE_INIT:\r\n        return {\r\n            ...state,\r\n            purchased: false\r\n        }\r\n        case actionTypes.PURCHASE_POKE_START:\r\n            return{\r\n                ...state,\r\n                loading:true\r\n            };\r\n        case actionTypes.PURCHASE_POKE_SUCCESS:\r\n           const newOrder = {\r\n                ...action.orderData,\r\n                id: action.orderId\r\n            };\r\n            return{\r\n                ...state,\r\n                loading: false,\r\n                purchased: true,\r\n                orders: state.orders.concat(newOrder)\r\n            };\r\n        case actionTypes.PURCHASE_POKE_FAIL:\r\n            return{\r\n                ...state,\r\n                loading: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState ={\r\n    token:null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false,\r\n    authRedirectPath: '/'\r\n};\r\n\r\nconst reducer = (state = initialState, action) =>{\r\n    switch (action.type){\r\n        case actionTypes.AUTH_START:\r\n            return{\r\n                ...state,\r\n                error: null,\r\n                loading: true\r\n            }\r\n        case actionTypes.AUTH_SUCCESS:\r\n            return{\r\n                ...state,\r\n                token: action.idToken,\r\n                userId: action.userId,\r\n                error: null,\r\n                loading: false\r\n            }\r\n        case actionTypes.AUTH_FAIL:\r\n            return{\r\n                ...state,\r\n                error: action.error,\r\n                loading: false\r\n            }\r\n        case actionTypes.AUTH_LOGOUT:\r\n            return{\r\n                ...state,\r\n                token:null,\r\n                userId: null\r\n            }\r\n        case actionTypes.SET_AUTH_REDIRECT_PATH:\r\n            return{\r\n                ...state,\r\n                authRedirectPath: action.path\r\n            }\r\n        default:\r\n            return state;             \r\n\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport {createStore,applyMiddleware, compose, combineReducers} from 'redux';\nimport pokeBuilderReducer from './store/reducers/pokeBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\n\nimport thunk from 'redux-thunk';\n//redux development tools will only be visible in dev mode \nlet composeEnhancers = compose;\nif (process.env.NODE_ENV ==='development'){\n  composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; \n}\n\nconst rootReducer = combineReducers({\n  pokeBuilder: pokeBuilderReducer,\n  order: orderReducer,\n  auth: authReducer\n});\n\nconst store = createStore(rootReducer,composeEnhancers(applyMiddleware(thunk)));\n\nconst app = (\n  //connect react app with redux store\n  <Provider store = {store}> \n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n\n)\n\n\nReactDOM.render(\n  app, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}